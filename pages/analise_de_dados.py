# Importando bibliotecas necess√°rias
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
import plotly.express as px
import plotly.graph_objects as go
from scipy.stats import gaussian_kde
from plotly.subplots import make_subplots
from scipy import stats
# Importando fun√ß√µes auxiliares
from utils.api_wiki import get_wikipedia_summary
from utils.get_info import *
from utils.prepracao_dados import *

# ------------------------------
# Vari√°veis Globais
# ------------------------------
DATA_FRAME = {}
PILOTO = "Lewis Hamilton"
REGULAMENTOS = [2014, 2022]


# ------------------------------
# Fun√ß√£o Utilit√°ria
# ------------------------------
def get_rgba(color_name, alpha=0.2):
    """Converte nome de cor ou hex em rgba transparente"""
    rgb = mcolors.to_rgb(color_name)  # retorna valores entre 0‚Äì1
    return f"rgba({int(rgb[0]*255)},{int(rgb[1]*255)},{int(rgb[2]*255)},{alpha})"


def get_mapa_cores(df):
    # Garantir que "cores" vire tupla (para ser hashable)
    df_tmp = df.copy()
    df_tmp["cores"] = df_tmp["cores"].apply(
        lambda x: tuple(x) if isinstance(x, list) else (x,)
    )

    # Criar dicion√°rios
    mapa_barras = (
        df_tmp[["nome_equipe", "cores"]]
        .drop_duplicates()
        .set_index("nome_equipe")["cores"]
        .apply(lambda x: x[0] if len(x) > 0 else "#808080")
        .to_dict()
    )

    mapa_linhas = (
        df_tmp[["nome_equipe", "cores"]]
        .drop_duplicates()
        .set_index("nome_equipe")["cores"]
        .apply(lambda x: x[1] if len(x) > 1 else "#000000")
        .to_dict()
    )

    return mapa_barras, mapa_linhas


def filtrar_periodo_companheiro(df_ham, df_companheiro, nome_companheiro):
    # filtra apenas o companheiro na Mercedes
    df_temp = df_companheiro[
        (df_companheiro['nome_completo'] == nome_companheiro) 
        & (df_companheiro['nome_equipe'] == 'Mercedes')
    ]
    
    # anos em que esse companheiro REALMENTE estava na Mercedes
    anos_comuns = df_temp['ano'].unique()
    
    # Hamilton apenas nesses anos
    df_ham_filtrado = df_ham[
        (df_ham['ano'].isin(anos_comuns)) 
        & (df_ham['nome_equipe'] == 'Mercedes')
    ]
    
    return df_ham_filtrado, df_temp


def filtrar_periodo_russell(df_ham, df_companheiro):
    """
    Retorna apenas os anos em que Hamilton e Russell foram companheiros na Mercedes (2022 em diante).
    """
    df_russell = df_companheiro[
        (df_companheiro['nome_completo'] == 'George Russell')
        & (df_companheiro['nome_equipe'] == 'Mercedes')
        & (df_companheiro['ano'] >= 2022)  # Russell s√≥ entrou em 2022
    ]
    
    anos_validos = df_russell['ano'].unique()
    
    df_ham_filtrado = df_ham[
        (df_ham['ano'].isin(anos_validos))
        & (df_ham['nome_equipe'] == 'Mercedes')
    ]
    
    return df_ham_filtrado, df_russell


def analise_intervalo_confianca(df_ham, df_comp):
    """Calcula intervalo de confian√ßa e teste t unilateral"""
    # Remover valores NaN das colunas de posi√ß√£o final
    ham_positions = df_ham["posicao_final"].dropna()
    comp_positions = df_comp["posicao_final"].dropna()
    
    # Verificar se temos dados suficientes ap√≥s remover NaN
    if len(ham_positions) < 2 or len(comp_positions) < 2:
        return {
            "media_ham": np.nan, "ic_ham": (np.nan, np.nan),
            "media_tm": np.nan, "ic_tm": (np.nan, np.nan),
            "t_stat": np.nan, "p_val": np.nan
        }
    
    # M√©dias
    media_ham = ham_positions.mean()
    media_tm = comp_positions.mean()

    # IC 95% Hamilton
    sem_ham = stats.sem(ham_positions)
    ic_ham = stats.t.interval(0.95, len(ham_positions)-1, loc=media_ham, scale=sem_ham)

    # IC 95% Companheiro
    sem_tm = stats.sem(comp_positions)
    ic_tm = stats.t.interval(0.95, len(comp_positions)-1, loc=media_tm, scale=sem_tm)

    # Teste t unilateral: Hamilton < Companheiro (melhor posi√ß√£o = menor n√∫mero)
    if ham_positions.std() == 0 and comp_positions.std() == 0:
        t_stat, p_val = np.nan, np.nan
    else:
        try:
            t_stat, p_val = stats.ttest_ind(ham_positions, comp_positions, 
                                          equal_var=False, alternative='less')
        except:
            t_stat, p_val = np.nan, np.nan

    return {
        "media_ham": media_ham, "ic_ham": ic_ham,
        "media_tm": media_tm, "ic_tm": ic_tm,
        "t_stat": t_stat, "p_val": p_val
    }

# ===============================
# Gr√°ficos
# ===============================
def grafico_densidade_interativo(df):
    import plotly.graph_objects as go
    import numpy as np
    from scipy.stats import gaussian_kde
    import streamlit as st

    # Se "cores" for lista, pega a primeira cor
    df = df.copy()
    df["cores"] = df["cores"].apply(lambda x: x[0] if isinstance(x, list) else x)

    fig = go.Figure()

    for equipe, grupo in df.groupby("nome_equipe"):
        valores = grupo["posicao_final"].dropna()
        if len(valores) == 0:
            continue

        x_vals = np.linspace(valores.min(), valores.max(), 200)
        kde = gaussian_kde(valores)
        densidade = kde(x_vals)

        cor = grupo["cores"].iloc[0]

        # =======================
        # Curva de densidade
        # =======================
        fig.add_trace(go.Scatter(
            x=x_vals,
            y=densidade,
            mode="lines",
            line=dict(color=cor, width=2),
            name=f"Densidade {equipe}"
        ))

        # =======================
        # Estat√≠sticas
        # =======================
        media = valores.mean()
        mediana = np.median(valores)
        moda_idx = np.argmax(densidade)  # √≠ndice do pico da curva
        moda = x_vals[moda_idx]

        # Linha da m√©dia
        fig.add_vline(
            x=media,
            line=dict(color=cor, dash="dot", width=1.5),
            annotation_text=f"M√©dia: {media:.1f}",
            annotation_position="top"
        )


        # Linha da moda (pico KDE)
        fig.add_vline(
            x=moda,
            line=dict(color=cor, dash="dash", width=1.5),
            annotation_text=f"Pico: {moda:.1f}",
            annotation_position="bottom"
        )

    # =======================
    # Layout final
    # =======================
    fig.update_layout(
        title="Distribui√ß√£o de Posi√ß√µes por Equipe",
        xaxis_title="Posi√ß√£o Final",
        yaxis_title="Densidade",
        legend=dict(
            orientation="h",
            yanchor="top",
            y=-0.2,
            xanchor="center",
            x=0.5
        )
    )

    st.plotly_chart(fig, use_container_width=True)


def medidas_centrais_grafico(resumo_hamilton: pd.DataFrame) -> None:
    fig = go.Figure()

    # Reusar os mapas de cor
    mapa_barras, mapa_linhas = get_mapa_cores(DATA_FRAME['df_dados_LH'])

    for equipe in resumo_hamilton["nome_equipe"].unique():
        df_equipe = resumo_hamilton[resumo_hamilton["nome_equipe"] == equipe]
        cor = mapa_barras.get(equipe, "#808080")  # cor principal

        # Linha da m√©dia
        fig.add_trace(go.Scatter(
            x=df_equipe["ano"],
            y=df_equipe["mean"],
            mode="lines+markers",
            name=f"M√©dia",
            line=dict(color=cor, width=3),
            marker=dict(size=8, color=cor)
        ))

        # Linha da mediana (tracejada)
        fig.add_trace(go.Scatter(
            x=df_equipe["ano"],
            y=df_equipe["median"],
            mode="lines+markers",
            name=f"Mediana",
            line=dict(color=cor, width=2, dash="dot"),
            marker=dict(symbol="diamond", size=7, color=cor)
        ))

        # Faixa de desvio padr√£o com transpar√™ncia
        fig.add_trace(go.Scatter(
            x=pd.concat([df_equipe["ano"], df_equipe["ano"][::-1]]),
            y=pd.concat([df_equipe["mean"] + df_equipe["std"], 
                        (df_equipe["mean"] - df_equipe["std"])[::-1]]),
            fill="toself",
            fillcolor=get_rgba(cor, 0.2),
            line=dict(color="rgba(255,255,255,0)"),
            hoverinfo="skip",
            name=f"¬±1 Desvio Padr√£o ({equipe})"
        ))

    # ===============================
    # Linhas dos regulamentos da F1
    # ===============================
    regulamentos = {
        2009: "Mudan√ßa Aerodin√¢mica",
        2014: "Era H√≠brida",
        2017: "Carros Largos",
        2022: "Efeito Solo"
    }

    for ano, desc in regulamentos.items():
        fig.add_vline(
            x=ano,
            line=dict(color="white", dash="dash"),
            annotation=dict(
                text=f"{ano}\n{desc}",
                showarrow=False,
                yanchor="bottom",
                xanchor="left",
                font=dict(size=10, color="white")
            )
        )

    # Layout
    fig.update_layout(
        title="üìà Evolu√ß√£o da Posi√ß√£o M√©dia e Mediana do Hamilton por Ano",
        xaxis_title="Ano",
        yaxis_title="Posi√ß√£o Final",
        template="plotly_white",
        hovermode="x unified",
        legend=dict(
            orientation="h",   # horizontal
            yanchor="top",     # ancorar no topo
            y=-0.2,            # jogar pra baixo do gr√°fico
            xanchor="center",  # centralizar
            x=0.5
        )
    )

    st.plotly_chart(fig, use_container_width=True)


def grafico_boxplot(df_hamilton, df_teammate, teammate_name, teammate_color="blue"):
    fig = go.Figure()
    fig.add_trace(go.Box(
        y=df_hamilton["posicao_final"], 
        name="Lewis Hamilton", marker=dict(color="gray")
    ))
    fig.add_trace(go.Box(
        y=df_teammate["posicao_final"], 
        name=teammate_name, marker=dict(color=teammate_color)
    ))

    fig.update_layout(
        title=f"Distribui√ß√£o das Posi√ß√µes: Hamilton vs {teammate_name}",
        height=400
    )
    st.plotly_chart(fig, use_container_width=True)


def grafico_comparacao_com_ic(df_ham, df_comp, nome_companheiro):
    """Cria gr√°fico de linha com intervalos de confian√ßa"""
    # Agrupar por ano e calcular m√©dia e IC
    ham_por_ano = df_ham.groupby('ano')['posicao_final'].agg(['mean', 'count', 'std']).reset_index()
    comp_por_ano = df_comp.groupby('ano')['posicao_final'].agg(['mean', 'count', 'std']).reset_index()
    
    # Calcular intervalo de confian√ßa para cada ano
    ham_por_ano['ic_superior'] = ham_por_ano['mean'] + (1.96 * ham_por_ano['std'] / np.sqrt(ham_por_ano['count']))
    ham_por_ano['ic_inferior'] = ham_por_ano['mean'] - (1.96 * ham_por_ano['std'] / np.sqrt(ham_por_ano['count']))
    
    comp_por_ano['ic_superior'] = comp_por_ano['mean'] + (1.96 * comp_por_ano['std'] / np.sqrt(comp_por_ano['count']))
    comp_por_ano['ic_inferior'] = comp_por_ano['mean'] - (1.96 * comp_por_ano['std'] / np.sqrt(comp_por_ano['count']))
    
    # Criar gr√°fico
    fig = go.Figure()
    
    # Lewis Hamilton - linha principal
    fig.add_trace(go.Scatter(
        x=ham_por_ano['ano'],
        y=ham_por_ano['mean'],
        mode='lines+markers',
        name='Lewis Hamilton',
        line=dict(color="#606060", width=3),
        marker=dict(size=8, color='#606060')
    ))
    
    # Lewis Hamilton - √°rea do IC
    fig.add_trace(go.Scatter(
        x=ham_por_ano['ano'].tolist() + ham_por_ano['ano'].tolist()[::-1],
        y=ham_por_ano['ic_superior'].tolist() + ham_por_ano['ic_inferior'].tolist()[::-1],
        fill='toself',
        fillcolor='rgba(51, 50, 50, 0.44)',
        line=dict(color='rgba(255,255,255,0)'),
        name='IC 95% Hamilton',
        showlegend=True
    ))
    
    # Companheiro - linha principal
    fig.add_trace(go.Scatter(
        x=comp_por_ano['ano'],
        y=comp_por_ano['mean'],
        mode='lines+markers',
        name=nome_companheiro,
        line=dict(color='#00D2BE', width=3),
        marker=dict(size=8, color='#00D2BE')
    ))
    
    # Companheiro - √°rea do IC
    fig.add_trace(go.Scatter(
        x=comp_por_ano['ano'].tolist() + comp_por_ano['ano'].tolist()[::-1],
        y=comp_por_ano['ic_superior'].tolist() + comp_por_ano['ic_inferior'].tolist()[::-1],
        fill='toself',
        fillcolor='rgba(0, 210, 189, 0.44)',
        line=dict(color='rgba(255,255,255,0)'),
        name=f'IC 95% {nome_companheiro}',
        showlegend=True
    ))
    
    # Atualizar layout
    fig.update_layout(
        title=f'Compara√ß√£o de Posi√ß√µes M√©dias com IC 95%<br>Hamilton vs {nome_companheiro}',
        xaxis_title='Ano',
        yaxis_title='Posi√ß√£o M√©dia Final',
        hovermode='x unified',
        legend=dict(orientation='h', yanchor='bottom', y=1.02, xanchor='center', x=0.5),
        height=500,
        template='plotly_white'
    )
    
    return fig


# ------------------------------
# Contexto
# ------------------------------
def contexto_conteudo() -> None:
    """Fun√ß√£o para renderizar o contexto do conte√∫do"""    

    # ---- Contexto Formula 1 ----
    col1, col2 = st.columns([1, 1], vertical_alignment="center")

    with col1:
        st.markdown(
            """
                <div class="conteudo">
                    <h2 class="titulo-2">Contexto</h2>
                    <div class="paragrafo">
                        <p class="text">A <strong>Formula 1</strong> √© considerada, por muitos, o √°pice do automobilismo mundial: a vitrine m√°xima onde talento, ousadia e disciplina se encontram em um espet√°culo que mistura velocidade, tecnologia e emo√ß√£o. Para a maioria dos pilotos, desde os primeiros passos nas <i>categorias de base</i> at√© os sonhos de inf√¢ncia, chegar √† <strong>Formula 1</strong> j√° √© uma conquista quase inimagin√°vel. Poucos conseguem superar todas as barreiras financeiras, f√≠sicas e mentais para finalmente se sentar no <i>cockpit</i> de um carro da categoria, competindo lado a lado com alguns dos maiores nomes da hist√≥ria do esporte.</p>
                        <p class="text">No entanto, estar presente no <i>grid</i> √© apenas o in√≠cio de um caminho √°rduo. Vencer na <strong>Formula 1</strong> exige n√£o apenas habilidade inata, mas tamb√©m uma combina√ß√£o rara de estrat√©gia, preparo f√≠sico impec√°vel, confian√ßa e, muitas vezes, estar no lugar certo na hora certa. Ainda mais raro √© transformar vit√≥rias isoladas em consist√™ncia ao longo de uma temporada inteira, alcan√ßando o t√£o sonhado t√≠tulo mundial. Esse feito √© reservado a uma minoria absoluta, um grupo seleto de pilotos que se eterniza nos livros da categoria.</p>
                    </div>
                </div>
            """,
            unsafe_allow_html=True,
        )
    with col2:
        st.image(
            "https://cdn.britannica.com/66/258266-050-BD8FC43A/Max-Verstappen-Grand-Prix-of-Singapore.jpg",
            use_container_width=True,
        )

    st.divider()

    # ---- Sobre Lewis Hamilton ----
    df_pilotos = get_info_pilotos()
    df_piloto = df_pilotos[df_pilotos['nome_completo'] == PILOTO]
    info_wiki = get_wikipedia_summary(df_piloto['wiki_url_piloto'].iloc[0])

    col3, col4 = st.columns([1, 2], vertical_alignment="center")

    with col3:
        st.image(info_wiki['image'], use_container_width=True)

    with col4:
        st.markdown(
            """
                <div class="conteudo">
                    <h2 class="titulo-2">Sobre Lewis Hamilton</h2>
                    <div class="paragrafo">
                        <p class="text"><strong>Lewis Hamilton</strong> √© um dos nomes mais marcantes da hist√≥ria da Formula 1. Nascido em Stevenage, Inglaterra, come√ßou sua trajet√≥ria no <i>kart</i> ainda muito jovem e rapidamente se destacou pela combina√ß√£o de talento natural e determina√ß√£o. Ao longo dos anos construiu uma carreira que o levou do sonho de crian√ßa ao patamar mais alto do automobilismo mundial, tornando-se n√£o apenas campe√£o, mas tamb√©m uma figura de grande impacto dentro e fora das pistas. Sua trajet√≥ria √© marcada por conquistas expressivas, recordes impressionantes e uma presen√ßa que ultrapassa o universo esportivo, consolidando-o como um dos grandes √≠cones da era moderna do esporte a motor.</p>
                        <p class="text">Nesta an√°lise, revisitaremos cada temporada do heptacampe√£o at√© 2024, √∫ltimo ano de sua longa passagem pela <strong>Mercedes</strong>, equipe com a qual conquistou seis de seus t√≠tulos. A quest√£o que guia nossa investiga√ß√£o √© clara: Hamilton √© realmente t√£o bom quanto parece ou foi apenas o carro, como muitas pessoas podem pensar?</p>
                    </div>
                </div>
            """,
            unsafe_allow_html=True,
        )
    
    st.divider()


# ------------------------------
# Dados Dispon√≠veis
# ------------------------------
def dados_conteudo() -> None:
    """Fun√ß√£o para renderizar a p√°gina de dados dispon√≠veis"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">Dados Dispon√≠veis</h2>
                <h3 class="titulo-3">Fonte</h3>
                <div class="paragrafo">
                    <p class="text">
                        Os dados desta an√°lise foram retirados do 
                        <a href="https://www.kaggle.com/datasets/rohanrao/formula-1-world-championship-1950-2020/data">Kaggle</a>. 
                        As informa√ß√µes est√£o divididas em 14 arquivos, de forma normalizada. 
                        Por isso √© importante definir bem as perguntas que queremos responder, 
                        j√° que, dependendo delas, ser√° necess√°rio transformar essas tabelas em 
                        um √∫nico dataset para an√°lise.
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">Perguntas</h3>
                <div class="paragrafo">
                    <p class="text">
                        Como estamos analisando a <strong>Formula 1</strong> e focando em um piloto espec√≠fico, 
                        algumas perguntas guiam nosso estudo:
                    </p>
                    <ol>
                        <li>Quais s√£o as m√©tricas m√©dias do piloto no geral? Elas mudam ao longo dos anos?</li>
                        <li>O desempenho dele evoluiu de forma consistente? E atualmente, continua em crescimento?</li>
                        <li>Com as mudan√ßas de regulamento, houve quedas ou saltos de desempenho?</li>
                        <li>Comparado aos companheiros de equipe, ele se destacou?</li>
                        <li>Houve algum per√≠odo de domin√¢ncia? Essa domin√¢ncia veio mais do carro ou do piloto?</li>
                    </ol>
                    <p class="text">Nosso foco principal √© a quinta pergunta: <strong>o que significa ser dominante?</strong> Para chegar a essa resposta, come√ßaremos explorando as outras quest√µes e, ao final, verificaremos se √© poss√≠vel afirmar ou n√£o essa domin√¢ncia. √â prov√°vel que seja necess√°ria uma an√°lise mais ampla e detalhada, mas por enquanto, sabendo qual √© nosso objetivo, o pr√≥ximo passo √© a <strong>prepara√ß√£o de dados</strong>!</p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )


# ------------------------------
# Prepara√ß√£o de Dados
# ------------------------------
def preparacao_conteudo() -> None:
    """Fun√ß√£o para renderizar o conte√∫do da p√°gina de Tratamento de Dados"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">Prepara√ß√£o de Dados</h2>
                <div class="paragrafo">
                    <p class="text">
                        No mundo real, os dados geralmente s√£o armazenados em bancos de dados normalizados,
                        o que nem sempre √© adequado para an√°lises diretas. 
                        Neste segmento, vamos observar como as tabelas est√£o distribu√≠das, 
                        identificar os indicadores e atributos necess√°rios para a an√°lise
                        e construir novos DataFrames unindo as tabelas de interesse. 
                        Al√©m disso, avaliaremos a possibilidade de criar colunas adicionais
                        que possam auxiliar em an√°lises futuras.
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">Visualizar DataFrames</h3>
                <div class="paragrafo">
                    <p class="text">
                        Como mencionado anteriormente, agora entraremos na parte de visualiza√ß√£o dos DataFrames. 
                        √â importante lembrar que, para analisarmos o desempenho do piloto, 
                        o foco principal s√£o as corridas. 
                        Com isso em mente, vamos explorar os DataFrames a seguir:
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )



    func_get_dataframe = {
        'Piloto': get_info_pilotos,
        'Equipe': get_info_time,
        'Corridas': get_info_corrida,
        'Tempo de Volta': get_lap_time,
        'Status': get_status_race,
        'Classifica√ß√£o dos Pilotos': get_drivers_standing,
        'Temporadas': get_seasons,
        'Pit Stops': get_pit_stops,
        'Resultados das Sprints': get_sprints_results,
        'Classifica√ß√£o das Equipes': get_time_standing,
        'Resultados das Corridas': get_race_results,
        'Circuitos': get_circuits,
        'Qualifica√ß√µes': get_qualifying
    }

    # Selectbox (apenas um por vez)
    df_exibir = st.selectbox(
        "Selecione o DataFrame para visualizar:", 
        list(func_get_dataframe.keys())
    )

    # Condicional para exibir o selecionado
    if df_exibir:  
        st.subheader(f"üìä {df_exibir}")
        df = func_get_dataframe[df_exibir]()  # executa a fun√ß√£o que retorna o dataframe
        st.dataframe(df)

    st.markdown(
        """
            <div class="conteudo">
                <hr>
                <div class="paragrafo">
                    <h3 class="titulo-3">DataFrame para An√°lise</h3>
                    <p class="text">
                        As tabelas <strong>Resultados das Sprints</strong> e 
                        <strong>Resultados das Corridas</strong> apresentam a mesma estrutura de colunas. 
                        Por isso, podemos <strong>concaten√°-las</strong> em um √∫nico DataFrame, 
                        obtendo uma vis√£o consolidada do desempenho dos pilotos e do total de pontos 
                        acumulados ao longo dos anos.
                        Embora as <strong>Sprints</strong> sejam provas mais curtas, 
                        e muitas vezes questionadas pelos pr√≥prios pilotos, 
                        seus pontos tamb√©m s√£o relevantes para a an√°lise e, portanto, ser√£o considerados.
                        Al√©m disso, vamos incluir o <strong>ano</strong> de cada corrida e o 
                        <strong>status final</strong> do piloto, permitindo identificar eventuais DNF 
                        (<i>Did Not Finish</i>) em sua carreira. Isso facilitar√° a filtragem dos per√≠odos 
                        em que Lewis Hamilton esteve ativo na Formula 1.
                        Por fim, construiremos dois DataFrames: 
                        um exclusivo para <strong>Lewis Hamilton</strong> e outro abrangendo 
                        <strong>todos os pilotos</strong>, de modo a possibilitar compara√ß√µes diretas 
                        com o heptacampe√£o.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )

    col1, col2 = st.columns(2)

    DATA_FRAME['df_dados_corridas'] = merge_tabelas()
    DATA_FRAME['df_dados_LH'] = df_especifico()
    

    with col1:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">Todas as Corridas (2007-2024)</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_corridas'])

    with col2:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">Lewis Hamilton Resultados</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_LH'])

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Nestas tabelas est√£o reunidos os dados que servir√£o de base para a an√°lise. 
                        A tabela <strong>Todas as Corridas</strong> consolida informa√ß√µes das tabelas de 
                        <i>Resultados das Sprints</i>, <i>Resultados das Corridas</i>, <i>Corridas</i>, 
                        <i>Status</i>, <i>Equipes</i> e <i>Pilotos</i>. 
                        Al√©m disso, acrescentamos a coluna <i>"ganho_posicao"</i>, que indica 
                        quantas posi√ß√µes o piloto conquistou ao longo da prova em rela√ß√£o ao grid de largada. <br><br>
                        J√° a tabela Lewis Hamilton Resultados mant√©m a mesma estrutura, mas inclui novas colunas: "vitorias", indicando quantas vezes o piloto terminou em primeiro lugar; "podios", registrando as ocasi√µes em que ficou entre os tr√™s primeiros; e "pole_position", que mostra quantas vezes conquistou a primeira posi√ß√£o no grid de largada durante a qualifica√ß√£o. Essa m√©trica √© fundamental 
                        para compreender sua performance ao longo da carreira, j√° que a vit√≥ria 
                        √© um dos principais indicadores de dom√≠nio na Formula 1. <br><br>
                        Com essas informa√ß√µes, o pr√≥ximo passo √© verificar se existem valores nulos, 
                        garantindo que nossa an√°lise seja consistente e confi√°vel.
                    </p>
                </div>
                <hr>
                <h2 class="titulo-2">Tratamento de Dados</h2>
                <div class="paragrafo">
                    <p class="text">
                        No processo de tratamento, √© importante destacar que nem todo valor nulo 
                        representa uma inconsist√™ncia. Em alguns casos, a aus√™ncia de informa√ß√£o 
                        tamb√©m pode trazer insights relevantes. <br><br>
                        Nesta se√ß√£o, vamos verificar a quantidade de valores nulos em cada coluna dos DataFrames.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )

    col3, col4 = st.columns(2)

    with col3:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üîé Valores Nulos por Coluna <br>(Todas as Corridas)</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_corridas'].isnull().sum().reset_index().rename(columns={"index": "Coluna", 0: "Nulos"}))
    
    with col4:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üîé Valores Nulos por Coluna <br> (Lewis Hamilton Resultados)</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_LH'].isnull().sum().reset_index().rename(columns={"index": "Coluna", 0: "Nulos"}))

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        A an√°lise dos valores ausentes revela que as colunas 
                        <i>"ganho_posicao"</i> e <i>"posicao_final"</i> apresentam 
                        exatamente a mesma quantidade de registros nulos. 
                        Isso n√£o √© coincid√™ncia: na Formula 1, quando um piloto 
                        <strong>n√£o conclui a corrida (DNF - Did Not Finish)</strong>, 
                        n√£o h√° como registrar sua posi√ß√£o final ou o ganho de posi√ß√µes. 
                        Assim, a aus√™ncia desses dados reflete a realidade das provas, 
                        e n√£o uma falha no conjunto.
                        <br><br>
                        O mesmo padr√£o ocorre com as colunas 
                        <i>"tempo_volta_ultima"</i> e <i>"ms_volta_ultima"</i>. 
                        Elas ficam em branco justamente quando Hamilton abandona a corrida 
                        ou termina com <strong>+1 volta</strong> em rela√ß√£o ao l√≠der, 
                        situa√ß√£o em que n√£o existe um tempo v√°lido de √∫ltima volta. 
                        J√° os campos <i>"volta_rapida"</i> e <i>"volta_rapida_tempo"</i> 
                        s√≥ aparecem nulos em casos em que o piloto n√£o completou nenhuma volta, 
                        como no GP da Espanha de 2016, quando um acidente com seu companheiro 
                        de equipe, Nico Rosberg, causou seu abandono logo na primeira curva.
                        <br><br>
                        Portanto, os valores nulos est√£o diretamente associados 
                        √†s condi√ß√µes reais das corridas e n√£o comprometem a integridade da base. 
                        Antes de avan√ßar, entretanto, √© essencial verificar a exist√™ncia 
                        de <strong>linhas duplicadas</strong>, evitando que registros 
                        repetidos distor√ßam nossa an√°lise.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )


    # ------ Duplicatas ------
    cols_hashable = [
        col for col in DATA_FRAME['df_dados_corridas'].columns
        if pd.api.types.is_hashable(DATA_FRAME['df_dados_corridas'][col].dropna().iloc[0])
    ]

    duplicatas_corridas = DATA_FRAME['df_dados_corridas'].duplicated(subset=cols_hashable).sum()
    duplicatas_lh = DATA_FRAME['df_dados_LH'].duplicated(subset=cols_hashable).sum()

    col5, col6 = st.columns(2)

    with col5:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üìå Duplicatas <br>(Todas as Corridas)</h3>
            </div>
        """, unsafe_allow_html=True)

        col1, col2, col3 = st.columns([1,2,1]) 
        with col2:
            st.metric("üîÅ Duplicatas", duplicatas_corridas, border=True)

    with col6:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üìå Duplicatas <br>(Lewis Hamilton Resultados)</h3>
            </div>
        """, unsafe_allow_html=True)

        col1, col2, col3 = st.columns([1,2,1])  

        with col2:
            st.metric("üîÅ Duplicatas",duplicatas_lh, border=True)

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        A verifica√ß√£o mostra que n√£o h√° registros duplicados nos DataFrames, 
                        o que refor√ßa a consist√™ncia do tratamento inicial realizado. 
                        Com uma base confi√°vel e livre de ru√≠dos, podemos avan√ßar para a 
                        <strong>classifica√ß√£o das vari√°veis</strong> e a escolha das 
                        visualiza√ß√µes mais adequadas para extrair insights relevantes.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )


# ------------------------------
# Classifica√ß√£o das Vari√°veis
# ------------------------------
def classificacao_conteudo() -> None:
    """Renderiza a classifica√ß√£o vari√°vel por vari√°vel, com justificativa"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">Classifica√ß√£o das Vari√°veis</h2>
                <div class="paragrafo">
                    <p class="text">
                        Agora vamos classificar <strong>cada vari√°vel do dataset</strong> individualmente.  
                        Para cada coluna, ser√° apresentada sua categoria (qualitativa nominal, ordinal, 
                        quantitativa discreta ou cont√≠nua) acompanhada de uma <strong>justificativa</strong> 
                        explicando o porqu√™ da classifica√ß√£o.  
                        Isso ajuda a entender como elas podem ser usadas em an√°lises e quais 
                        t√©cnicas estat√≠sticas fazem sentido aplicar.
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">üìã Vari√°veis e seus Tipos</h3>
            </div>
        """, unsafe_allow_html=True
    )

    # Lista de vari√°veis com justificativas individuais
    variaveis = [
        # IDs (chaves t√©cnicas, n√£o usadas em an√°lise estat√≠stica direta)
        ("raceId", "ID / C√≥digo", "Identificador √∫nico da corrida. N√£o tem significado num√©rico, apenas relacional."),
        ("driverId", "ID / C√≥digo", "Identificador √∫nico do piloto, usado para integrar informa√ß√µes entre tabelas."),
        ("constructorId", "ID / C√≥digo", "Identificador √∫nico da equipe. Fun√ß√£o de chave estrangeira."),
        ("statusId", "ID / C√≥digo", "Identificador num√©rico do status da corrida. Sem interpreta√ß√£o estat√≠stica."),
        ("circuitId", "ID / C√≥digo", "Identificador √∫nico do circuito, valor t√©cnico para refer√™ncia."),
        ("resultId", "ID / C√≥digo", "Identificador √∫nico do resultado. Usado apenas para indexa√ß√£o."),

        # Vari√°veis Qualitativas Nominais 
        ("code", "Qualitativa Nominal", "C√≥digo de tr√™s letras do piloto (ex: HAM, VER). √â apenas um r√≥tulo."),
        ("nome_completo", "Qualitativa Nominal", "Nome completo do piloto, sem qualquer ordem impl√≠cita."),
        ("nome_equipe", "Qualitativa Nominal", "Nome da equipe (Mercedes, Ferrari). N√£o existe hierarquia."),
        ("name_circuit", "Qualitativa Nominal", "Nome do circuito (ex: Monza, Interlagos). Categoria descritiva."),
        ("status_race", "Qualitativa Nominal", "Situa√ß√£o final (Finished, DNF, Accident). Categorias distintas, sem ordem."),
        ("tipo_corrida", "Qualitativa Nominal", "Tipo da corrida (Sprint ou Principal). Classifica√ß√£o bin√°ria sem hierarquia."),
        ("cores", "Qualitativa Nominal", "Cor associada √† equipe. Apenas descritivo, sem significado num√©rico."),

        # Vari√°veis Quantitativas Discretas 
        ("posicao_grid", "Quantitativa Discreta", "Posi√ß√£o de largada, n√∫mero inteiro. Usado em c√°lculos como ganho de posi√ß√£o."),
        ("posicao_final", "Quantitativa Discreta", "Posi√ß√£o final da corrida. Valores inteiros (1¬∫, 2¬∫, 3¬∫), n√£o admite fra√ß√µes."),
        ("positionOrder", "Quantitativa Discreta", "Ordem oficial registrada pela FIA. Contagem inteira de posi√ß√£o."),
        ("ano", "Quantitativa Discreta", "Ano da corrida. √â uma contagem inteira e n√£o assume valores intermedi√°rios."),
        ("numero_do_piloto", "Quantitativa Discreta", "N√∫mero fixo do carro do piloto. √â inteiro e n√£o fracion√°vel."),
        ("laps", "Quantitativa Discreta", "N√∫mero de voltas completadas. √â uma contagem natural (1, 2, 3...)."),
        ("pontos", "Quantitativa Discreta", "Pontos obtidos segundo regulamento. Valores definidos e inteiros."),
        ("ganho_posicao", "Quantitativa Discreta", "Diferen√ßa entre posi√ß√µes de largada e chegada. Valor inteiro (positivo ou negativo)."),
        ("vitorias", "Quantitativa Discreta", "Um booleano em 0/1 representa se Hamilton venceu (1) ou n√£o (0) uma corrida. √â considerado quantitativa discreta por assumir apenas dois valores inteiros poss√≠veis e permitir c√°lculos estat√≠sticos."),
        ("podios", "Quantitativa Discreta", "Um booleano em 0/1 representa se Hamilton ficou no p√≥dio (1) ou n√£o (0) em uma corrida. √â considerado quantitativa discreta por assumir apenas dois valores inteiros poss√≠veis e permitir c√°lculos estat√≠sticos."),
        ("pole_position", "Quantitativa Discreta", "Um booleano em 0/1 representa se Hamilton pegou a primeira posi√ß√£o do grid d largada (1) ou n√£o (0) em uma corrida. √â considerado quantitativa discreta por assumir apenas dois valores inteiros poss√≠veis e permitir c√°lculos estat√≠sticos."),
        ("rodada", "Quantitativa Discreta", "Contagem dos GP's de um ano. √â uma vari√°vel de contagem inteira"),

        # Vari√°veis Quantitativas Cont√≠nuas 
        ("tempo_volta", "Quantitativa Cont√≠nua", "Tempo de volta medido em escala cont√≠nua. Entre dois tempos sempre existe outro."),
        ("ms_volta", "Quantitativa Cont√≠nua", "Tempo de volta registrado em milissegundos. Representa medida cont√≠nua."),
        ("volta_rapida_tempo", "Quantitativa Cont√≠nua", "Tempo da volta mais r√°pida, grandeza cont√≠nua com precis√£o infinita."),
        ("data_corrida", "Quantitativa Cont√≠nua", "A data da corrida pode ser representada numericamente (como dias ou segundos em rela√ß√£o a uma origem no tempo). Dessa forma, assume valores em uma escala cont√≠nua e permite compara√ß√µes e c√°lculos de intervalos entre corridas.")

    ]


    # Criar dataframe com justificativas
    df_variaveis = pd.DataFrame(variaveis, columns=["Vari√°vel", "Tipo", "Justificativa"])

    st.dataframe(df_variaveis, use_container_width=True)

    st.markdown(
        """
            <div class="conteudo">
                <hr>
                <div class="paragrafo">
                    <p class="text">
                        Ap√≥s a classifica√ß√£o detalhada das vari√°veis, temos uma vis√£o clara de seus 
                        pap√©is dentro do conjunto de dados. Essa organiza√ß√£o √© essencial para orientar 
                        a escolha das t√©cnicas estat√≠sticas e das visualiza√ß√µes mais adequadas. 
                        Com essa base s√≥lida, podemos avan√ßar com maior seguran√ßa para a etapa de 
                        <strong>an√°lise explorat√≥ria</strong>, extraindo padr√µes, rela√ß√µes e insights 
                        relevantes sobre o desempenho dos pilotos e equipes na Formula 1.
                    </p>
                </div>
            </div>
        """, unsafe_allow_html=True
    )


# ------------------------------
# An√°lise dos Dados
# ------------------------------
def analise_conteudo() -> None:
    """Fun√ß√£o para renderizar a an√°lise explorat√≥ria"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">An√°lise dos Dados</h2>
                <div class="paragrafo">
                    <p class="text">
                        Com intuito de analisar a carreira de <strong>Lewis Hamilton</strong> na <i>Formula 1</i>, 
                        o primeiro passo ser√° observar sua consist√™ncia ao longo das temporadas, 
                        avaliando medidas como <strong>m√©dias</strong>, <strong>medianas</strong> 
                        e <strong>desvios-padr√£o</strong> de seus resultados, 
                        al√©m de m√©tricas gerais como <i>vit√≥rias</i>, <i>p√≥dios</i>, 
                        <i>poles</i> e <i>pontos</i>. 
                    </p>
                    <p class="text">
                        Em seguida, a an√°lise ser√° segmentada entre os anos de <strong>McLaren</strong> 
                        e de <strong>Mercedes</strong>, permitindo comparar a distribui√ß√£o de seus 
                        desempenhos em cada equipe. 
                    </p>
                    <p class="text">
                        Por fim, Hamilton ser√° comparado aos seus <strong>companheiros de equipe</strong>, 
                        especialmente na <strong>Mercedes</strong>, onde al√©m da visualiza√ß√£o gr√°fica 
                        ser√£o aplicados <i>intervalos de confian√ßa</i> e <i>testes de hip√≥tese</i>, 
                        a fim de verificar se, em m√©dia, seus resultados foram estatisticamente 
                        superiores aos dos colegas de time. 
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">Panorama Geral da Carreira</h2>
                <div class="paragrafo">
                    <p class="text">
                        O primeiro passo para a an√°lise √© observar o panorama geral da carreira de Lewis Hamilton. Para isso, √© importante levantar informa√ß√µes b√°sicas que ajudam a dimensionar sua trajet√≥ria, como o n√∫mero total de vit√≥rias conquistadas, a quantidade de p√≥dios alcan√ßados, quantas vezes ele largou na pole position e, por fim, o total de campeonatos mundiais que o piloto acumula ao longo da sua trajet√≥ria na Formula 1.
                    </p>
                </div>
            </div>
        """, unsafe_allow_html=True
    )

    df_piloto = DATA_FRAME['df_dados_LH']

    # Layout com duas colunas principais
    imagemCol, metricasCol = st.columns([0.4, 0.6], vertical_alignment="center")

    with imagemCol:
        st.image(os.path.abspath('assets/img/hamilton.png'), use_container_width=True)

    with metricasCol:

        resumo_ano = df_piloto.groupby("ano").agg(
            vitorias=("vitorias", "sum"),
            poles=("pole_position", "sum"),
            podios=("podios", "sum"),
        ).reset_index().sort_values("ano")

        total_temporadas = resumo_ano["ano"].nunique()
        total_vitorias = int(resumo_ano["vitorias"].sum())
        total_poles = int(resumo_ano["poles"].sum())
        total_podios = int(resumo_ano["podios"].sum())
        total_titulos = 7
        total_corridas_terminadas = DATA_FRAME['df_dados_LH'][DATA_FRAME['df_dados_LH']["posicao_final"].notnull()].shape[0]

        # Organizar m√©tricas em 2 linhas de 2 colunas
        col1, col2 = st.columns(2)
        with col1:
            st.metric("üèÅ Temporadas", total_temporadas, border=True)
        with col2:
            st.metric("ü•á Vit√≥rias", total_vitorias, border=True)

        col3, col4 = st.columns(2)
        with col3:
            st.metric("üéØ Poles", total_poles, border=True)
        with col4:
            st.metric("üèÜ P√≥dios", total_podios, border=True)

        col5, col6 = st.columns(2)
        with col5:
            st.metric("üëë T√≠tulos do Campeonato", total_titulos, border=True)
        with col6:
            st.metric("üö¶ Corridas Terminadas", total_corridas_terminadas, border=True)


    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Ao analisarmos os n√∫meros de Lewis Hamilton, rapidamente fica claro o tamanho do impacto que ele exerce dentro da Formula 1. Poucos pilotos na hist√≥ria conseguiram alcan√ßar um patamar t√£o elevado e consistente. Para termos uma no√ß√£o mais concreta dessa dimens√£o, basta lembrar que Ayrton Senna , considerado por muitos o maior nome da categoria , conquistou 41 vit√≥rias ao longo de sua carreira. √â verdade que, na √©poca, havia um n√∫mero menor de corridas por temporada, o que ajuda a explicar parcialmente essa diferen√ßa. No entanto, mesmo em um comparativo mais recente e equilibrado, Michael Schumacher, que divide com Hamilton o topo da lista de t√≠tulos mundiais, acumulou 95 vit√≥rias ao longo de sua trajet√≥ria. Ainda assim, Hamilton conseguiu superar essa marca, deixando em evid√™ncia a grandiosidade de seu desempenho e refor√ßando sua posi√ß√£o como um dos maiores, sen√£o o maior, da hist√≥ria da Formula 1.
                    </p>
                    <p class="text">
                        Outro ponto impressionante s√£o os <b>206 p√≥dios</b> conquistados, lembrando que esse n√∫mero inclui tamb√©m suas vit√≥rias.
                        Se retirarmos os 105 triunfos do total, obtemos a propor√ß√£o de aproximadamente <b>49% de vit√≥rias</b> sobre os p√≥dios. Ou seja, praticamente metade das vezes em que subiu ao p√≥dio, foi no lugar mais alto. 
                        Em compara√ß√£o, Schumacher apresenta cerca de <b>41%</b>, um n√∫mero alt√≠ssimo, mas ainda abaixo do brit√¢nico.
                    </p>
                    <p class="text">
                        Nas poles, Hamilton tamb√©m impressiona. Curiosamente, o n√∫mero de poles coincide com o total de vit√≥rias.
                        Claro, isso n√£o significa que todas as poles viraram vit√≥rias. 
                        Um exemplo claro foi em 2016, quando mesmo largando na frente, acabou colidindo com seu companheiro de equipe j√° na primeira curva.
                    </p>
                    <p class="text">
                        No total, Hamilton <b>terminou 344 corridas</b>. Dessas, em <b>206</b> ele esteve no p√≥dio, o que representa cerca de <b>40%</b>.
                        Em outras palavras: a cada 10 corridas que completou, em 4 ele aparecia entre os tr√™s primeiros, uma consist√™ncia inacredit√°vel.
                    </p>
                    <p class="text">
                        √â importante destacar que esses n√∫meros s√£o acumulados da carreira inteira.
                        Para entender melhor como Hamilton construiu essa trajet√≥ria, precisamos olhar sua evolu√ß√£o ao longo das temporadas:
                        ser√° que ele sempre foi consistente desde o in√≠cio, demonstrando talento natural,
                        ou essa performance foi resultado de um processo de amadurecimento aliado ao carro e √† equipe?
                        Com isso em mente, faremos um gr√°fico m√©dio da posi√ß√£o que ele ficou ao longo da temporada e comparar com a m√©dia de outros pilotos que correram na mesma √©poca 
                    </p>
                    <p class="text">
                        Com isso em mente, o pr√≥ximo passo da an√°lise ser√° observar algumas medidas estat√≠sticas que ajudam a traduzir numericamente o desempenho de Hamilton ao longo de sua carreira. Para cada temporada, iremos calcular m√©tricas como a m√©dia, que mostra um panorama geral de seus resultados; a mediana e a moda, que ajudam a identificar padr√µes de consist√™ncia; al√©m do desvio padr√£o e da vari√¢ncia, que indicam o quanto suas performances variaram ao longo do tempo. Dessa forma, ser√° poss√≠vel entender n√£o apenas os n√∫meros absolutos, mas tamb√©m como eles se distribuem, revelando a evolu√ß√£o e a regularidade do piloto temporada ap√≥s temporada.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True
    )


    resumo_hamilton = DATA_FRAME['df_dados_LH'].groupby(["ano", "nome_equipe"]).agg(
        mean=("posicao_final", "mean"),
        median=("posicao_final", "median"),
        std=("posicao_final", "std"),
        var=("posicao_final", "var"),
        moda=("posicao_final", lambda x: x.mode().iloc[0] if not x.mode().empty else None),
    ).reset_index()

    col1, col2 = st.columns([0.4,0.6], vertical_alignment='center')

    with col1:
        st.markdown(
            """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Como podemos observar no gr√°fico ao lado, logo em seu ano de estreia, 
                        <strong>Lewis Hamilton</strong> se destacou com <strong>m√©dias</strong> e 
                        <strong>medianas</strong> muito baixas para um novato na <i>Formula 1</i>. 
                        Vale ressaltar que, naquele ano, ele quebrou o <strong>recorde de pontos de um estreante</strong>, 
                        um feito que j√° evidenciava seu talento.
                    </p>
                    <p class="text">
                        Entretanto, com a entrada de um <strong>novo regulamento</strong>, percebe-se uma 
                        piora no desempenho, tanto na <strong>m√©dia</strong> quanto na <strong>mediana</strong>. 
                        Isso se deve principalmente ao <i>carro</i>: a <strong>McLaren</strong> focou tanto na disputa de 2008 
                        (quando Hamilton foi <strong>campe√£o mundial</strong>) que acabou negligenciando o desenvolvimento para a temporada seguinte. 
                        Essa queda trouxe aprendizados e o carro evoluiu ao longo das corridas. 
                        Ainda assim, insatisfeito com a estagna√ß√£o, Hamilton migrou para a <strong>Mercedes</strong>.
                    </p>
                </div>
            </div>
            """,
            unsafe_allow_html=True
        )


    with col2:
        medidas_centrais_grafico(resumo_hamilton)

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Na nova escuderia, o cen√°rio mudou. Com o in√≠cio da <strong>era h√≠brida</strong>, seu talento ficou ainda mais evidente: 
                        as <strong>m√©dias</strong> e <strong>medianas</strong> se mantiveram constantemente <strong>abaixo do 3¬∫ lugar</strong>, 
                        marcando um per√≠odo de <strong>dom√≠nio</strong> de Hamilton e da <strong>Mercedes</strong>.
                    </p>
                    <p class="text">
                        O ponto de virada veio em <strong>2021</strong>, na hist√≥rica batalha contra <strong>Max Verstappen</strong>. 
                        A <strong>Red Bull</strong> alcan√ßou a Mercedes em desenvolvimento e a disputa foi acirrada at√© a √∫ltima corrida, 
                        quando Hamilton acabou derrotado.
                    </p>
                    <p class="text">
                        J√° a partir de <strong>2022</strong>, com o regulamento do <strong>efeito solo</strong>, a Mercedes enfrentou 
                        s√©rios problemas de projeto. Hamilton tamb√©m parecia n√£o se adaptar bem ao novo conceito, refletindo em maior 
                        <strong>instabilidade</strong> e em um <strong>desvio padr√£o</strong> mais evidente nas posi√ß√µes. 
                        Apesar de alguma melhora em <strong>2023</strong>, as <strong>medianas</strong> e as <strong>m√©dias</strong> passaram a seguir 
                        uma tend√™ncia de <strong>crescimento</strong>, indicando resultados menos consistentes em rela√ß√£o ao auge da carreira.
                    </p>
                    <p class="text">
                        Ap√≥s entendermos a evolu√ß√£o de <strong>Hamilton</strong> ao longo dos anos e os impactos 
                        dos diferentes <strong>regulamentos</strong> em seu desempenho, √© importante observar tamb√©m 
                        a <strong>diferen√ßa entre suas passagens na McLaren e na Mercedes</strong>. 
                        Para isso, elaboramos uma <i>distribui√ß√£o das posi√ß√µes finais</i> separada por equipe, 
                        o que permite visualizar de forma clara tanto seu desenvolvimento quanto a confirma√ß√£o 
                        dos pontos discutidos anteriormente.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True
    )


    grafico_densidade_interativo(DATA_FRAME['df_dados_LH'])

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                    Como podemos observar acima, gr√°fico de <strong>distribui√ß√£o de posi√ß√µes</strong> evidencia de forma clara a diferen√ßa entre as fases de Hamilton na 
                    <strong>McLaren</strong> e na <strong>Mercedes</strong>. Enquanto na <strong>Mercedes</strong> sua curva √© mais concentrada 
                    nos primeiros lugares, com <i>pico</i> pr√≥ximo da <strong>1¬™ posi√ß√£o</strong> e <i>m√©dia</i> de <strong>3.5</strong>, 
                    j√° na <strong>McLaren</strong> a distribui√ß√£o aparece mais espalhada, com <i>pico</i> em torno da <strong>2¬™ posi√ß√£o</strong> 
                    e <i>m√©dia</i> de <strong>4.6</strong>. Isso mostra que, nos anos de <strong>Mercedes</strong>, Hamilton teve uma consist√™ncia 
                    muito maior em lutar por <strong>vit√≥rias</strong> e <strong>p√≥dios</strong>, enquanto na <strong>McLaren</strong>, apesar de 
                    competitivo, os resultados foram mais vari√°veis. 
                    </p>
                    <p class="text">
                    Ainda assim, √© importante destacar que, mesmo sem um <i>carro dominante</i>, Hamilton j√° apresentava desempenhos de alto n√≠vel. 
                    Seu <strong>t√≠tulo de 2008</strong> √© um exemplo disso: conquistado principalmente pelo talento e esfor√ßo, em uma temporada 
                    marcada pela pol√™mica do <i>‚ÄúCingapuragate‚Äù</i>, que poderia ter mudado o rumo do campeonato em favor de <strong>Felipe Massa</strong>. 
                    Na √∫ltima corrida, por√©m, Hamilton garantiu o t√≠tulo com uma <strong>ultrapassagem decisiva</strong> na volta final, mesmo com Massa 
                    vencendo a prova. 
                    </p>
                    <p class="text">
                    Retomando o ponto central, vemos que a <i>era de domin√¢ncia</i> da <strong>Mercedes</strong> foi determinante para que Hamilton 
                    conquistasse <strong>6 de seus 7 t√≠tulos mundiais</strong>. No entanto, isso levanta uma quest√£o importante: se a equipe era t√£o 
                    dominante, por que apenas <strong>Hamilton</strong> conseguiu transformar essa superioridade em <strong>t√≠tulos</strong>, enquanto 
                    seus <i>companheiros de equipe</i> n√£o tiveram o mesmo sucesso? Para responder a isso, precisamos analisar tamb√©m o desempenho 
                    dos <strong>companheiros de equipe</strong> de Hamilton, o que ser√° o pr√≥ximo passo da nossa an√°lise. 
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True
    )

    # ------- Compara√ß√£o -------

    df_companheiro = DATA_FRAME['df_dados_corridas'].copy()
    df_companheiro = df_companheiro[df_companheiro['nome_equipe'] == 'Mercedes']
    df_companheiro = df_companheiro[df_companheiro['ano'] >= 2013]
    df_companheiro = df_companheiro[df_companheiro['code'] != 'HAM'] 
    df_companheiro['vitorias'] = df_companheiro['posicao_final'] == 1

    lista_companheiros = df_companheiro['nome_completo'].unique()

    st.markdown(
        """
            <div class="conteudo">
                <hr>
                <h3 class="titulo-3">Compara√ß√£o com Companheiros de Equipe</h3>
                <div class="paragrafo">
                    <p class="text">
                    Para entender melhor o dom√≠nio de <strong>Lewis Hamilton</strong>, √© essencial compar√°-lo com seus 
                    <strong>companheiros de equipe</strong>, especialmente durante sua trajet√≥ria na <i>Mercedes</i>. 
                    </p>
                    <p class="text">
                    Nesta an√°lise, ser√° poss√≠vel selecionar o <strong>companheiro de equipe</strong> desejado e visualizar suas 
                    <strong>estat√≠sticas de posi√ß√£o final</strong> em termos de <i>m√©dia</i>. Tamb√©m ser√° considerado o 
                    <strong>intervalo de confian√ßa</strong>, que indica o grau de consist√™ncia dos resultados. 
                    Quanto menor for esse intervalo, maior a regularidade do piloto, j√° que suas posi√ß√µes tenderam a se concentrar 
                    dentro dessa faixa, com poucas ocorr√™ncias fora dela. 
                    </p>
                    <p class="text">
                    Para aprofundar a compara√ß√£o, ser√° realizado um <strong>teste de hip√≥tese</strong>, com o objetivo de verificar 
                    se <strong>Hamilton</strong>, em m√©dia, foi estatisticamente superior aos seus <i>companheiros</i> no quesito 
                    <strong>posi√ß√£o final</strong>. Para isso, aplicaremos o <i>teste de duas m√©dias para popula√ß√µes independentes</i>. 
                    </p>
                    <p class="text">
                    Fique √† vontade para escolher qual <strong>companheiro de equipe</strong> deseja analisar e observar como 
                    as estat√≠sticas se comportam em rela√ß√£o ao desempenho de <strong>Lewis Hamilton</strong>. 
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True
    )

    companheiro = st.selectbox("Selecione o Companheiro: ", lista_companheiros)

    # Hamilton (filtrado s√≥ Mercedes)
    df_ham = DATA_FRAME['df_dados_LH'].copy()
    df_ham = df_ham[df_ham['nome_equipe'] == 'Mercedes']

    # Na se√ß√£o de compara√ß√£o com companheiros, substitua a parte do teste por:
    if companheiro == 'Nico Rosberg':

        boxCol, textCol = st.columns(2, vertical_alignment='center')

        with boxCol:
            df_ham_filtrado, df_rosberg = filtrar_periodo_companheiro(df_ham, df_companheiro, "Nico Rosberg")
            grafico_boxplot(df_ham_filtrado, df_rosberg, "Nico Rosberg", teammate_color="#00D2BE")
        
        with textCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                A famosa rivalidade interna da <strong>Mercedes</strong>, conhecida como <i>"Brocedes"</i>, marcou a √©poca em que 
                                <strong>Lewis Hamilton</strong> e <strong>Nico Rosberg</strong> foram companheiros de equipe. 
                                No <i>boxplot</i> ao lado, podemos observar que <strong>Hamilton</strong> apresentou maior consist√™ncia, 
                                j√° que o tamanho de sua <i>caixa</i> √© menor, indicando uma dispers√£o de resultados mais baixa em compara√ß√£o a 
                                <strong>Rosberg</strong>. 
                            </p>
                            <p class="text">
                                Isso sugere que Hamilton esteve com mais frequ√™ncia entre os <strong>top 3</strong>. A dist√¢ncia interquartil foi de 
                                <strong>2</strong> para Hamilton e <strong>3</strong> para Rosberg, uma diferen√ßa relativamente pequena, mas ainda assim 
                                significativa, refletindo o alto n√≠vel de competitividade e o poder do carro da <strong>Mercedes</strong> naquela √©poca. 
                            </p>
                            <p class="text">
                                Al√©m disso, vale destacar que <strong>Rosberg</strong> apresentou <i>outliers</i> mais elevados que os de Hamilton, 
                                o que indica que em algumas corridas seu desempenho ficou bem abaixo da m√©dia, enquanto Hamilton manteve maior regularidade. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )

        textIcCol, icCol = st.columns(2, vertical_alignment='center')

        with textIcCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                Outro jeito de avaliarmos se o que vimos no <i>boxplot</i> se confirma √© por meio do 
                                <strong>intervalo de confian√ßa</strong> das posi√ß√µes finais de cada piloto ao longo das temporadas. 
                                No gr√°fico ao lado, observamos que, na maior parte dos anos, <strong>Rosberg</strong> apresentou uma 
                                <i>m√©dia</i> de posi√ß√£o final pior que <strong>Hamilton</strong>. Al√©m disso, o 
                                <strong>intervalo de confian√ßa</strong> de Rosberg tende a ser mais amplo, indicando maior varia√ß√£o 
                                de desempenho, enquanto o de Hamilton √© mais estreito, refletindo maior consist√™ncia. 
                            </p>
                            <p class="text">
                                √â importante lembrar que o <strong>intervalo de confian√ßa</strong> de 95% n√£o garante o valor exato 
                                da m√©dia, mas sim a faixa onde h√° alta probabilidade de o valor real da m√©dia populacional se encontrar. 
                                Ainda assim, a disputa foi bastante equilibrada, especialmente em <strong>2016</strong>, quando a 
                                rivalidade atingiu seu √°pice. 
                            </p>
                            <p class="text">
                                Por√©m, apenas a an√°lise de intervalos n√£o √© suficiente para afirmar com certeza se 
                                <strong>Hamilton</strong> foi estatisticamente melhor que <strong>Rosberg</strong>. 
                                Para isso, ser√° necess√°rio aplicar um <strong>teste de hip√≥tese</strong>. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )

        
        with icCol:
            # Gr√°fico de linha com IC
            fig_line_ic = grafico_comparacao_com_ic(df_ham_filtrado, df_rosberg, "Nico Rosberg")
            st.plotly_chart(fig_line_ic, use_container_width=True)
        
        testHipCol, textTestCol = st.columns([0.48,0.52], vertical_alignment='top')

        with testHipCol:
            # Teste de hip√≥tese separado
            resultado = analise_intervalo_confianca(df_ham_filtrado, df_rosberg)

            st.markdown("### üß™ Teste de Hip√≥tese")

            st.markdown("**H‚ÇÄ (Hip√≥tese Nula):**")
            st.latex(r"\mu_{\text{Hamilton}} \geq \mu_{\text{Rosberg}}")
            st.markdown("> A posi√ß√£o m√©dia de **Hamilton** √© igual ou **pior** que a do companheiro de equipe.")

            st.markdown("**H‚ÇÅ (Hip√≥tese Alternativa):**")
            st.latex(r"\mu_{\text{Hamilton}} < \mu_{\text{Rosberg}}")
            st.markdown("> A posi√ß√£o m√©dia de **Hamilton** √© **melhor** que a do companheiro de equipe.")

            # Exibir resultados
            col1, col2, col3 = st.columns(3)
            with col1:
                # Para Lewis Hamilton
                st.metric(
                    "Lewis Hamilton", 
                    f"{resultado['media_ham']:.2f}",
                    f"IC 95%: [{resultado['ic_ham'][0]:.2f}, {resultado['ic_ham'][1]:.2f}]"
                )
            with col2:
                # Para Nico Rosberg  
                st.metric(
                    "Nico Rosberg",
                    f"{resultado['media_tm']:.2f}",
                    f"IC 95%: [{resultado['ic_tm'][0]:.2f}, {resultado['ic_tm'][1]:.2f}]"
                )
            with col3:
                st.metric("Diferen√ßa", f"{resultado['media_ham'] - resultado['media_tm']:.2f}")
            
            st.metric("Valor p", f"{resultado['p_val']:.4f}")
            if resultado['p_val'] < 0.05:
                st.success("Diferen√ßa estatisticamente significativa (p < 0.05)")
            else:
                st.warning("Diferen√ßa n√£o estatisticamente significativa (p ‚â• 0.05)")

        with textTestCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                Ao lado, temos os resultados do <strong>teste de hip√≥tese</strong>, que busca avaliar se a 
                                <i>m√©dia da posi√ß√£o final</i> de <strong>Lewis Hamilton</strong> pode ser considerada 
                                estatisticamente melhor do que a de <strong>Nico Rosberg</strong>. Para isso, definimos o 
                                <i>n√≠vel de signific√¢ncia</i> em 5% (Œ± = 0,05), ou seja, aceitamos correr um risco de at√© 5% 
                                de concluir que Hamilton √© melhor quando, na verdade, n√£o seria. 
                            </p>
                            <p class="text">
                                O resultado encontrado foi um <strong>p-valor de 0,0628</strong>. Em termos estat√≠sticos, 
                                esse valor representa a probabilidade de observarmos uma diferen√ßa t√£o extrema (ou maior) entre 
                                Hamilton e Rosberg <i>caso a hip√≥tese nula seja verdadeira</i>,  isto √©, se n√£o houver realmente 
                                diferen√ßa entre as m√©dias. Como esse valor √© <i>maior</i> que o nosso n√≠vel de signific√¢ncia de 5%, 
                                <strong>n√£o podemos rejeitar H‚ÇÄ</strong> com seguran√ßa, o que significa que n√£o h√° evid√™ncias 
                                estat√≠sticas suficientes para afirmar que Hamilton teve, de forma consistente, uma m√©dia melhor 
                                que a de Rosberg.
                            </p>
                            <p class="text">
                                Entretanto, √© interessante observar que o p-valor ficou muito pr√≥ximo do limite adotado. 
                                Se ampli√°ssemos ligeiramente a signific√¢ncia para 7% (Œ± = 0,07), j√° seria poss√≠vel rejeitar H‚ÇÄ, 
                                indicando que Hamilton teria sim uma vantagem estatisticamente significativa. 
                                Esse detalhe mostra como a interpreta√ß√£o de testes estat√≠sticos deve ser feita com cuidado: 
                                a <i>signific√¢ncia estat√≠stica</i> n√£o √© um valor absoluto e r√≠gido, mas sim um crit√©rio 
                                convencional para reduzir riscos de erro.
                            </p>
                            <p class="text">
                                Por fim, para fins desta an√°lise explorat√≥ria, e considerando a proximidade do resultado com o 
                                limiar de decis√£o, adotaremos uma interpreta√ß√£o pr√°tica: a tend√™ncia sugere que Hamilton, de fato, 
                                apresentou uma m√©dia de desempenho superior ao Rosberg. Contudo, destacamos que estatisticamente 
                                essa conclus√£o ainda deve ser vista com cautela, pois n√£o houve suporte suficiente ao n√≠vel de 
                                5% de signific√¢ncia. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )


    # Repetir o mesmo padr√£o para os outros companheiros
    elif companheiro == 'Valtteri Bottas':
        boxCol, textCol = st.columns(2, vertical_alignment='center')
        
        with boxCol:          
            df_ham_filtrado, df_bottas = filtrar_periodo_companheiro(df_ham, df_companheiro, "Valtteri Bottas")
            grafico_boxplot(df_ham_filtrado, df_bottas, "Valtteri Bottas", teammate_color="#00D2BE")
        
        with textCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                           <p class="text">
                                Ap√≥s <strong>Nico Rosberg</strong>, foi a vez de <strong>Valtteri Bottas</strong> assumir o posto de 
                                <strong>companheiro de equipe</strong> de <strong>Lewis Hamilton</strong>. 
                                Hamilton chegava de uma temporada desafiadora, onde havia perdido o t√≠tulo para <strong>Rosberg</strong>, 
                                mas, j√° <i>tricampe√£o mundial</i> em <strong>2017</strong>, mostrou que a derrota n√£o abalou sua 
                                <i>consist√™ncia</i> dentro da pista. O <i>boxplot</i> ao lado ilustra bem essa diferen√ßa: 
                                enquanto <strong>Bottas</strong> ainda buscava se adaptar √† equipe, seus resultados apresentavam 
                                maior <i>dispers√£o</i> e valores mais altos, refletindo a dificuldade em manter o mesmo n√≠vel de 
                                <i>regularidade</i>. 
                                <strong>Hamilton</strong>, por outro lado, manteve uma <i>caixa</i> menor e mais baixa, sinal de que 
                                continuava entregando desempenhos s√≥lidos e constantemente em posi√ß√µes de destaque. 
                                A <i>amplitude interquartil</i> refor√ßa essa leitura: <strong>2</strong> para <strong>Hamilton</strong> 
                                contra <strong>3</strong> para <strong>Bottas</strong>, um indicativo claro de que os resultados do brit√¢nico 
                                oscilaram menos. 
                                Al√©m disso, <strong>Bottas</strong> apresentou <i>outliers</i> mais elevados, representando provas em que seu 
                                desempenho caiu de forma significativa, algo menos frequente em <strong>Hamilton</strong>. 
                                Esses elementos, quando observados em conjunto, deixam evidente que <strong>Bottas</strong> teve um in√≠cio de 
                                trajet√≥ria bem mais turbulento ao lado de um companheiro j√° consolidado no topo do <i>grid</i>.
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )
       
        textIcCol, icCol = st.columns(2, vertical_alignment='center')

        with textIcCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                Mas apenas o <i>boxplot</i> n√£o √© suficiente para afirmar se <strong>Lewis Hamilton</strong> realmente foi superior a 
                                <strong>Valtteri Bottas</strong> no quesito <strong>posi√ß√£o final</strong>. 
                                Para aprofundar a an√°lise, foi feita uma <i>compara√ß√£o de m√©dias</i> acompanhada de seus respectivos 
                                <strong>intervalos de confian√ßa</strong>, que permitem avaliar n√£o apenas a posi√ß√£o m√©dia, mas tamb√©m a 
                                <i>consist√™ncia</i> de cada piloto ao longo das temporadas. 
                                Ao lado, observamos que ambos come√ßaram pr√≥ximos, mas com o passar dos anos o <strong>intervalo de confian√ßa</strong> 
                                de <strong>Bottas</strong> se tornou cada vez maior, refletindo uma <i>dispers√£o</i> crescente nos resultados, enquanto o de 
                                <strong>Hamilton</strong> se manteve relativamente est√°vel, com sua m√©dia consistentemente menor que a de Bottas. 
                                Esse aumento de variabilidade, especialmente nos dois √∫ltimos anos, sugere que o <i>carro</i> da equipe j√° n√£o estava 
                                t√£o dominante quanto antes. Ainda assim, <strong>Hamilton</strong> conseguiu manter sua <i>regularidade</i>, evidenciando que 
                                mesmo em condi√ß√µes menos favor√°veis ele permanecia competitivo. 
                                Se o carro tivesse continuado extremamente dominante, esperar√≠amos ver ambos os pilotos sustentando m√©dias mais baixas 
                                de posi√ß√£o final, como na √©poca da dupla <strong>Hamilton‚ÄìRosberg</strong>. 
                                Diante disso, torna-se necess√°rio aplicar um <strong>teste de hip√≥tese</strong> a um n√≠vel de signific√¢ncia de 
                                <strong>5%</strong>, a fim de verificar estatisticamente se a vantagem de <strong>Hamilton</strong> sobre 
                                <strong>Bottas</strong> √© de fato significativa. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )

        with icCol:
            # Gr√°fico de linha com IC
            fig_line_ic = grafico_comparacao_com_ic(df_ham_filtrado, df_bottas, "Valtteri Bottas")
            st.plotly_chart(fig_line_ic, use_container_width=True)
        
        testHipCol, textTestCol = st.columns([0.48,0.52], vertical_alignment='top')

        with testHipCol:

            # Teste de hip√≥tese
            resultado = analise_intervalo_confianca(df_ham_filtrado, df_bottas)
            
            st.markdown("### üß™ Teste de Hip√≥tese")

            st.markdown("**H‚ÇÄ (Hip√≥tese Nula):**")
            st.latex(r"\mu_{\text{Hamilton}} \geq \mu_{\text{Bottas}}")
            st.markdown("> A posi√ß√£o m√©dia de **Hamilton** √© igual ou **pior** que a do companheiro de equipe.")

            st.markdown("**H‚ÇÅ (Hip√≥tese Alternativa):**")
            st.latex(r"\mu_{\text{Hamilton}} < \mu_{\text{Bottas}}")
            st.markdown("> A posi√ß√£o m√©dia de **Hamilton** √© **melhor** que a do companheiro de equipe.")

            # Exibir resultados
            col1, col2, col3 = st.columns(3)
            with col1:
                # Para Lewis Hamilton
                st.metric(
                    "Lewis Hamilton", 
                    f"{resultado['media_ham']:.2f}",
                    f"IC 95%: [{resultado['ic_ham'][0]:.2f}, {resultado['ic_ham'][1]:.2f}]"
                )
            with col2:
                # Para Valtteri Bottas  
                st.metric(
                    "Valtteri Bottas",
                    f"{resultado['media_tm']:.2f}",
                    f"IC 95%: [{resultado['ic_tm'][0]:.2f}, {resultado['ic_tm'][1]:.2f}]"
                )
            with col3:
                st.metric("Diferen√ßa", f"{resultado['media_ham'] - resultado['media_tm']:.2f}")
            
            st.metric("Valor p", f"{resultado['p_val']:.4f}")
            if resultado['p_val'] < 0.05:
                st.success("Diferen√ßa estatisticamente significativa (p < 0.05)")
            else:
                st.warning("Diferen√ßa n√£o estatisticamente significativa (p ‚â• 0.05)")

        with textTestCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                Ao lado, temos os resultados do <strong>teste de hip√≥tese</strong> que compara a 
                                <i>m√©dia da posi√ß√£o final</i> de <strong>Lewis Hamilton</strong> com a de 
                                <strong>Valtteri Bottas</strong>. Novamente, adotamos um <i>n√≠vel de signific√¢ncia</i> 
                                de 5% (Œ± = 0,05), o que significa aceitar um risco de at√© 5% de concluir que Hamilton 
                                √© melhor quando, na realidade, n√£o seria. 
                            </p>
                            <p class="text">
                                O resultado obtido foi um <strong>p-valor de 0,0003</strong>. Esse valor √© extremamente 
                                baixo e indica que a probabilidade de observarmos uma diferen√ßa t√£o acentuada entre os 
                                dois pilotos <i>caso a hip√≥tese nula fosse verdadeira</i> √© de apenas 0,03%. 
                                Em termos estat√≠sticos, isso representa uma evid√™ncia <strong>fort√≠ssima</strong> contra H‚ÇÄ. 
                            </p>
                            <p class="text">
                                Como o <strong>p-valor</strong> √© muito menor que o nosso n√≠vel de signific√¢ncia (0,0003 &lt; 0,05), 
                                <strong>rejeitamos H‚ÇÄ com seguran√ßa</strong> e conclu√≠mos que <strong>Lewis Hamilton</strong> 
                                teve, de forma consistente, uma <i>m√©dia de posi√ß√£o final</i> melhor do que a de 
                                <strong>Valtteri Bottas</strong>. 
                            </p>
                            <p class="text">
                                Diferente do caso de <strong>Nico Rosberg</strong>, onde o resultado ficou na fronteira da decis√£o, 
                                aqui n√£o h√° margem para d√∫vida: a evid√™ncia estat√≠stica √© clara e robusta. 
                                Isso refor√ßa a interpreta√ß√£o feita nos <i>boxplots</i> e nos <strong>intervalos de confian√ßa</strong>, 
                                de que <strong>Hamilton</strong> manteve sua regularidade e domin√¢ncia em rela√ß√£o ao seu 
                                companheiro de equipe ao longo dos anos. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )


    elif companheiro == 'George Russell':
        boxCol, textCol = st.columns(2, vertical_alignment='center')

        with boxCol:          
            df_ham_filtrado, df_russell = filtrar_periodo_russell(df_ham, df_companheiro)
            grafico_boxplot(df_ham_filtrado, df_russell, "George Russell", teammate_color="#6CD3BF")

        with textCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                O <i>boxplot</i> comparativo entre <strong>Lewis Hamilton</strong> e <strong>George Russell</strong> 
                                evidencia diferen√ßas relevantes no comportamento de seus resultados desde que passaram a ser companheiros 
                                de equipe. A <i>caixa</i> de <strong>Russell</strong> √© visivelmente menor, o que indica uma 
                                <strong>maior consist√™ncia</strong> em suas posi√ß√µes finais. Isso mostra que, mesmo sem liderar 
                                constantemente sobre Hamilton, Russell manteve desempenhos pr√≥ximos entre si, com pouca varia√ß√£o. 
                            </p>
                            <p class="text">
                                J√° <strong>Hamilton</strong>, embora em v√°rias ocasi√µes tenha alcan√ßado m√©dias mais favor√°veis, 
                                apresentou maior dispers√£o, alternando entre corridas de alto desempenho e outras aqu√©m do esperado. 
                                Em resumo, Hamilton alcan√ßa picos mais altos, enquanto Russell se destaca pela estabilidade. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )

        textIcCol, icCol = st.columns([0.4,0.6], vertical_alignment='center')

        with textIcCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                A an√°lise das <strong>m√©dias com intervalo de confian√ßa de 95%</strong> refor√ßa o equil√≠brio entre os dois pilotos. 
                                Curiosamente, <strong>Hamilton</strong> aparece com resultados m√©dios ligeiramente piores em rela√ß√£o a <strong>Russell</strong>, 
                                terminando em posi√ß√µes finais um pouco mais altas. Esse comportamento pode refletir o impacto das mudan√ßas de regulamento, 
                                que exigiram maior adapta√ß√£o de Hamilton, enquanto Russell pareceu ajustar-se de forma mais natural. 
                            </p>
                            <p class="text">
                                Nos <strong>intervalos de confian√ßa</strong>, observa-se que Hamilton mant√©m uma amplitude relativamente menor, 
                                sinalizando maior controle em seus desempenhos, enquanto Russell se destaca pela consist√™ncia ao longo das temporadas, 
                                refor√ßando sua r√°pida adapta√ß√£o e a disputa interna pelo posto de <i>primeiro piloto</i> da Mercedes. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )

        with icCol:
            fig_line_ic = grafico_comparacao_com_ic(df_ham_filtrado, df_russell, "George Russell")
            st.plotly_chart(fig_line_ic, use_container_width=True)

        testHipCol, textTestCol = st.columns([0.48,0.52], vertical_alignment='top')

        with testHipCol:

            resultado = analise_intervalo_confianca(df_ham_filtrado, df_russell)
            
            st.markdown("### üß™ Teste de Hip√≥tese")

            st.markdown("**H‚ÇÄ (Hip√≥tese Nula):**")
            st.latex(r"\mu_{\text{Hamilton}} \geq \mu_{\text{Russell}}")
            st.markdown("> A posi√ß√£o m√©dia de **Hamilton** √© igual ou **pior** que a do companheiro de equipe.")

            st.markdown("**H‚ÇÅ (Hip√≥tese Alternativa):**")
            st.latex(r"\mu_{\text{Hamilton}} < \mu_{\text{Russell}}")
            st.markdown("> A posi√ß√£o m√©dia de **Hamilton** √© **melhor** que a do companheiro de equipe.")

            col1, col2, col3 = st.columns(3)
            with col1:
                st.metric(
                    "Lewis Hamilton", 
                    f"{resultado['media_ham']:.2f}",
                    f"IC 95%: [{resultado['ic_ham'][0]:.2f}, {resultado['ic_ham'][1]:.2f}]"
                )
            with col2:
                st.metric(
                    "George Russell",
                    f"{resultado['media_tm']:.2f}",
                    f"IC 95%: [{resultado['ic_tm'][0]:.2f}, {resultado['ic_tm'][1]:.2f}]"
                )
            with col3:
                st.metric("Diferen√ßa", f"{resultado['media_ham'] - resultado['media_tm']:.2f}")
            
            st.metric("Valor p", f"{resultado['p_val']:.4f}")
            if resultado['p_val'] < 0.05:
                st.success("Diferen√ßa estatisticamente significativa (p < 0.05)")
            else:
                st.warning("Diferen√ßa n√£o estatisticamente significativa (p ‚â• 0.05)")

        with textTestCol:
            st.markdown(
                """
                    <div class="conteudo">
                        <div class="paragrafo">
                            <p class="text">
                                Para avaliar de forma objetiva se a diferen√ßa entre os desempenhos m√©dios de <strong>Hamilton</strong> 
                                e <strong>Russell</strong> √© estatisticamente significativa, foi realizado um <strong>teste de hip√≥tese</strong> 
                                com n√≠vel de signific√¢ncia de 5% (Œ± = 0,05). 
                            </p>
                            <p class="text">
                                O resultado encontrado foi um <strong>p-valor de 0,6255</strong>. Esse valor, muito acima do limite de 5%, 
                                mostra que <i>n√£o podemos rejeitar a hip√≥tese nula (H‚ÇÄ)</i>. Na pr√°tica, significa que n√£o h√° evid√™ncias suficientes 
                                para afirmar que Hamilton apresenta, em m√©dia, um desempenho superior ao de Russell. 
                            </p>
                            <p class="text">
                                O p-valor elevado sugere que as diferen√ßas observadas podem ser atribu√≠das a <strong>varia√ß√µes aleat√≥rias</strong> 
                                de corrida para corrida, e n√£o a uma vantagem estatisticamente clara de um piloto sobre o outro. 
                            </p>
                            <p class="text">
                                Portanto, embora os gr√°ficos indiquem nuances interessantes, Hamilton com m√©dias um pouco melhores 
                                e Russell com maior consist√™ncia, a an√°lise estat√≠stica confirma que tais distin√ß√µes n√£o atingem 
                                <strong>signific√¢ncia estat√≠stica</strong>, devendo ser interpretadas com cautela. 
                            </p>
                        </div>
                    </div>
                """,
                unsafe_allow_html=True
            )


    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Em resumo, a an√°lise comparativa entre Hamilton e seus companheiros de equipe evidencia um padr√£o claro: mesmo em contextos distintos de regulamento e competitividade do carro, Hamilton mostrou uma consist√™ncia estat√≠stica superior, com m√©dias geralmente melhores ou pelo menos t√£o boas quanto as de seus pares. Bottas aparece como o advers√°rio em que a diferen√ßa foi mais n√≠tida, enquanto contra Rosberg e Russell a disputa se mostrou mais equilibrada, refletindo momentos de adapta√ß√£o ou maior competitividade interna. Esses resultados refor√ßam que, apesar das varia√ß√µes, Hamilton manteve um desempenho s√≥lido e competitivo em diferentes fases da sua
                    </p>
                </div>
                <hr>
            </div>
        """, unsafe_allow_html=True
    )


# ------------------------------
# Conclus√£o
# ------------------------------
def conclusao_conteudo() -> None:
    """Fun√ß√£o Renderiza a conclus√£o"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">Conclus√£o</h2>
                <div class="paragrafo">
                    <p class="text">
                        As m√©tricas m√©dias de <strong>Lewis Hamilton</strong> revelam um piloto que se manteve quase sempre entre as primeiras posi√ß√µes, com alto n√≠vel de consist√™ncia ao longo das temporadas (1). Seu desempenho apresentou uma trajet√≥ria de evolu√ß√£o cont√≠nua, principalmente nos primeiros anos de carreira, alcan√ßando o auge entre 2014 e 2020; no entanto, mais recentemente, houve sinais de queda relacionados √†s condi√ß√µes t√©cnicas, embora ele siga em patamar competitivo (2). As mudan√ßas de regulamento tiveram impacto direto, sobretudo ap√≥s 2022, resultando em quedas percept√≠veis no rendimento m√©dio, o que demonstra o peso das altera√ß√µes t√©cnicas sobre seu desempenho (3).
                    </p>
                    <p class="text">
                        Quando comparado aos seus companheiros de equipe, Hamilton mostrou-se superior a <strong>Bottas</strong> em const√¢ncia, disputou de forma mais equilibrada com <strong>Rosberg</strong> e, mais recente, enfrentou uma rivalidade crescente com <strong>Russell</strong>, mas ainda preserva vantagens importantes em termos de regularidade e controle (4). O per√≠odo entre 2014 e 2020 pode ser classificado como de <i>domin√¢ncia clara</i>, em que a superioridade da Mercedes desempenhou papel central; ainda assim, a forma como Hamilton converteu essa vantagem em t√≠tulos e recordes refor√ßa que a domin√¢ncia foi tamb√©m fruto de sua habilidade individual (5).
                    </p>
                    <p class="text">
                        Assim, a an√°lise evidencia que Hamilton construiu uma carreira marcada por consist√™ncia, capacidade de evolu√ß√£o e adapta√ß√£o a diferentes cen√°rios, confirmando-se como um dos pilotos mais dominantes da <strong>Formula 1</strong>, mesmo diante das oscila√ß√µes mais recentes. Ainda assim, seria necess√°rio aprofundar a investiga√ß√£o em m√©tricas como <strong>vit√≥rias</strong>, <strong>p√≥dios</strong> e <strong>pole positions</strong> para enriquecer a compreens√£o completa do seu impacto competitivo.
                    </p>
                </div>
                <hr>
            </div>
        """, unsafe_allow_html=True
    )



# ------------------------------
# Renderizando tudo
# ------------------------------
def conteudo() -> None:
    """Fun√ß√£o para renderizar o conte√∫do da p√°gina de An√°lise de Dados"""
    st.markdown(
        """
        <div class="conteudo">
            <h1>An√°lise de Dados</h1>
        </div>
        """,
        unsafe_allow_html=True,
    )
    
    contextTab, dadosTab, prepTab, classificacaoTab, analiseTab, conclusaoTab = st.tabs(
        [
            ":material/contextual_token: Contexto",
            ":material/table: Dados Dispon√≠veis",
            ":material/healing: Prepara√ß√£o",
            ":material/search_insights: Classifica√ß√£o de Vari√°veis",
            ":material/analytics: An√°lise",
            ":material/pin_end: Conclus√£o"
        ]
    )
    
    with contextTab:
        contexto_conteudo()
    with dadosTab:
        dados_conteudo()
    with prepTab:
        preparacao_conteudo()
    with classificacaoTab:
        classificacao_conteudo()
    with analiseTab:
        analise_conteudo()
    with conclusaoTab:
        conclusao_conteudo()


conteudo()

# Importando bibliotecas necess√°rias
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
import plotly.express as px
import plotly.graph_objects as go
from scipy.stats import gaussian_kde
# Importando fun√ß√µes auxiliares
from utils.api_wiki import get_wikipedia_summary
from utils.get_info import *
from utils.prepracao_dados import *

# ------------------------------
# Vari√°veis Globais
# ------------------------------
DATA_FRAME = {}
PILOTO = "Lewis Hamilton"
REGULAMENTOS = [2014, 2022]


# ------------------------------
# Fun√ß√£o Utilit√°ria
# ------------------------------
def get_rgba(color_name, alpha=0.2):
    """Converte nome de cor ou hex em rgba transparente"""
    rgb = mcolors.to_rgb(color_name)  # retorna valores entre 0‚Äì1
    return f"rgba({int(rgb[0]*255)},{int(rgb[1]*255)},{int(rgb[2]*255)},{alpha})"


def get_mapa_cores(df):
    # Garantir que "cores" vire tupla (para ser hashable)
    df_tmp = df.copy()
    df_tmp["cores"] = df_tmp["cores"].apply(
        lambda x: tuple(x) if isinstance(x, list) else (x,)
    )

    # Criar dicion√°rios
    mapa_barras = (
        df_tmp[["nome_equipe", "cores"]]
        .drop_duplicates()
        .set_index("nome_equipe")["cores"]
        .apply(lambda x: x[0] if len(x) > 0 else "#808080")
        .to_dict()
    )

    mapa_linhas = (
        df_tmp[["nome_equipe", "cores"]]
        .drop_duplicates()
        .set_index("nome_equipe")["cores"]
        .apply(lambda x: x[1] if len(x) > 1 else "#000000")
        .to_dict()
    )

    return mapa_barras, mapa_linhas


# ===============================
# Gr√°ficos
# ===============================
def grafico_densidade_interativo(df):
    import plotly.graph_objects as go
    import numpy as np
    from scipy.stats import gaussian_kde
    import streamlit as st

    # Se "cores" for lista, pega a primeira cor
    df = df.copy()
    df["cores"] = df["cores"].apply(lambda x: x[0] if isinstance(x, list) else x)

    fig = go.Figure()

    for equipe, grupo in df.groupby("nome_equipe"):
        valores = grupo["posicao_final"].dropna()
        if len(valores) == 0:
            continue

        x_vals = np.linspace(valores.min(), valores.max(), 200)
        kde = gaussian_kde(valores)
        densidade = kde(x_vals)

        cor = grupo["cores"].iloc[0]

        # =======================
        # Curva de densidade
        # =======================
        fig.add_trace(go.Scatter(
            x=x_vals,
            y=densidade,
            mode="lines",
            line=dict(color=cor, width=2),
            name=f"Densidade {equipe}"
        ))

        # =======================
        # Estat√≠sticas
        # =======================
        media = valores.mean()
        mediana = np.median(valores)
        moda_idx = np.argmax(densidade)  # √≠ndice do pico da curva
        moda = x_vals[moda_idx]

        # Linha da m√©dia
        fig.add_vline(
            x=media,
            line=dict(color=cor, dash="dot", width=1.5),
            annotation_text=f"M√©dia: {media:.1f}",
            annotation_position="top"
        )


        # Linha da moda (pico KDE)
        fig.add_vline(
            x=moda,
            line=dict(color=cor, dash="dash", width=1.5),
            annotation_text=f"Pico: {moda:.1f}",
            annotation_position="bottom"
        )

    # =======================
    # Layout final
    # =======================
    fig.update_layout(
        title="Distribui√ß√£o de Posi√ß√µes por Equipe",
        xaxis_title="Posi√ß√£o Final",
        yaxis_title="Densidade",
        legend=dict(
            orientation="h",
            yanchor="top",
            y=-0.2,
            xanchor="center",
            x=0.5
        )
    )

    st.plotly_chart(fig, use_container_width=True)


def medidas_centrais_grafico(resumo_hamilton: pd.DataFrame) -> None:
    fig = go.Figure()

    # Reusar os mapas de cor
    mapa_barras, mapa_linhas = get_mapa_cores(DATA_FRAME['df_dados_LH'])

    for equipe in resumo_hamilton["nome_equipe"].unique():
        df_equipe = resumo_hamilton[resumo_hamilton["nome_equipe"] == equipe]
        cor = mapa_barras.get(equipe, "#808080")  # cor principal

        # Linha da m√©dia
        fig.add_trace(go.Scatter(
            x=df_equipe["ano"],
            y=df_equipe["mean"],
            mode="lines+markers",
            name=f"M√©dia",
            line=dict(color=cor, width=3),
            marker=dict(size=8, color=cor)
        ))

        # Linha da mediana (tracejada)
        fig.add_trace(go.Scatter(
            x=df_equipe["ano"],
            y=df_equipe["median"],
            mode="lines+markers",
            name=f"Mediana",
            line=dict(color=cor, width=2, dash="dot"),
            marker=dict(symbol="diamond", size=7, color=cor)
        ))

        # Faixa de desvio padr√£o com transpar√™ncia
        fig.add_trace(go.Scatter(
            x=pd.concat([df_equipe["ano"], df_equipe["ano"][::-1]]),
            y=pd.concat([df_equipe["mean"] + df_equipe["std"], 
                        (df_equipe["mean"] - df_equipe["std"])[::-1]]),
            fill="toself",
            fillcolor=get_rgba(cor, 0.2),
            line=dict(color="rgba(255,255,255,0)"),
            hoverinfo="skip",
            name=f"¬±1 Desvio Padr√£o ({equipe})"
        ))

    # ===============================
    # Linhas dos regulamentos da F1
    # ===============================
    regulamentos = {
        2009: "Mudan√ßa Aerodin√¢mica",
        2014: "Era H√≠brida",
        2017: "Carros Largos",
        2022: "Efeito Solo"
    }

    for ano, desc in regulamentos.items():
        fig.add_vline(
            x=ano,
            line=dict(color="white", dash="dash"),
            annotation=dict(
                text=f"{ano}\n{desc}",
                showarrow=False,
                yanchor="bottom",
                xanchor="left",
                font=dict(size=10, color="white")
            )
        )

    # Layout
    fig.update_layout(
        title="üìà Evolu√ß√£o da Posi√ß√£o M√©dia e Mediana do Hamilton por Ano",
        xaxis_title="Ano",
        yaxis_title="Posi√ß√£o Final",
        template="plotly_white",
        hovermode="x unified",
        legend=dict(
            orientation="h",   # horizontal
            yanchor="top",     # ancorar no topo
            y=-0.2,            # jogar pra baixo do gr√°fico
            xanchor="center",  # centralizar
            x=0.5
        )
    )

    st.plotly_chart(fig, use_container_width=True)


# ------------------------------
# Contexto
# ------------------------------
def contexto_conteudo() -> None:
    """Fun√ß√£o para renderizar o contexto do conte√∫do"""    

    # ---- Contexto Formula 1 ----
    col1, col2 = st.columns([1, 1], vertical_alignment="center")

    with col1:
        st.markdown(
            """
                <div class="conteudo">
                    <h2 class="titulo-2">Contexto</h2>
                    <div class="paragrafo">
                        <p class="text">A <strong>Formula 1</strong> √© considerada, por muitos, o √°pice do automobilismo mundial: a vitrine m√°xima onde talento, ousadia e disciplina se encontram em um espet√°culo que mistura velocidade, tecnologia e emo√ß√£o. Para a maioria dos pilotos, desde os primeiros passos nas <i>categorias de base</i> at√© os sonhos de inf√¢ncia, chegar √† <strong>Formula 1</strong> j√° √© uma conquista quase inimagin√°vel. Poucos conseguem superar todas as barreiras financeiras, f√≠sicas e mentais para finalmente se sentar no <i>cockpit</i> de um carro da categoria, competindo lado a lado com alguns dos maiores nomes da hist√≥ria do esporte.</p>
                        <p class="text">No entanto, estar presente no <i>grid</i> √© apenas o in√≠cio de um caminho √°rduo. Vencer na <strong>Formula 1</strong> exige n√£o apenas habilidade inata, mas tamb√©m uma combina√ß√£o rara de estrat√©gia, preparo f√≠sico impec√°vel, confian√ßa e, muitas vezes, estar no lugar certo na hora certa. Ainda mais raro √© transformar vit√≥rias isoladas em consist√™ncia ao longo de uma temporada inteira, alcan√ßando o t√£o sonhado t√≠tulo mundial. Esse feito √© reservado a uma minoria absoluta, um grupo seleto de pilotos que se eterniza nos livros da categoria.</p>
                    </div>
                </div>
            """,
            unsafe_allow_html=True,
        )
    with col2:
        st.image(
            "https://cdn.britannica.com/66/258266-050-BD8FC43A/Max-Verstappen-Grand-Prix-of-Singapore.jpg",
            use_container_width=True,
        )

    st.divider()

    # ---- Sobre Lewis Hamilton ----
    df_pilotos = get_info_pilotos()
    df_piloto = df_pilotos[df_pilotos['nome_completo'] == PILOTO]
    info_wiki = get_wikipedia_summary(df_piloto['wiki_url_piloto'].iloc[0])

    col3, col4 = st.columns([1, 2], vertical_alignment="center")

    with col3:
        st.image(info_wiki['image'], use_container_width=True)

    with col4:
        st.markdown(
            """
                <div class="conteudo">
                    <h2 class="titulo-2">Sobre Lewis Hamilton</h2>
                    <div class="paragrafo">
                        <p class="text"><strong>Lewis Hamilton</strong> √© um dos nomes mais marcantes da hist√≥ria da Formula 1. Nascido em Stevenage, Inglaterra, come√ßou sua trajet√≥ria no <i>kart</i> ainda muito jovem e rapidamente se destacou pela combina√ß√£o de talento natural e determina√ß√£o. Ao longo dos anos construiu uma carreira que o levou do sonho de crian√ßa ao patamar mais alto do automobilismo mundial, tornando-se n√£o apenas campe√£o, mas tamb√©m uma figura de grande impacto dentro e fora das pistas. Sua trajet√≥ria √© marcada por conquistas expressivas, recordes impressionantes e uma presen√ßa que ultrapassa o universo esportivo, consolidando-o como um dos grandes √≠cones da era moderna do esporte a motor.</p>
                        <p class="text">Nesta an√°lise, revisitaremos cada temporada do heptacampe√£o at√© 2024, √∫ltimo ano de sua longa passagem pela <strong>Mercedes</strong>, equipe com a qual conquistou seis de seus t√≠tulos. A quest√£o que guia nossa investiga√ß√£o √© clara: Hamilton √© realmente t√£o bom quanto parece ou foi apenas o carro, como muitas pessoas podem pensar?</p>
                    </div>
                </div>
            """,
            unsafe_allow_html=True,
        )
    
    st.divider()


# ------------------------------
# Dados Dispon√≠veis
# ------------------------------
def dados_conteudo() -> None:
    """Fun√ß√£o para renderizar a p√°gina de dados dispon√≠veis"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">Dados Dispon√≠veis</h2>
                <h3 class="titulo-3">Fonte</h3>
                <div class="paragrafo">
                    <p class="text">
                        Os dados desta an√°lise foram retirados do 
                        <a href="https://www.kaggle.com/datasets/rohanrao/formula-1-world-championship-1950-2020/data">Kaggle</a>. 
                        As informa√ß√µes est√£o divididas em 14 arquivos, de forma normalizada. 
                        Por isso √© importante definir bem as perguntas que queremos responder, 
                        j√° que, dependendo delas, ser√° necess√°rio transformar essas tabelas em 
                        um √∫nico dataset para an√°lise.
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">Perguntas</h3>
                <div class="paragrafo">
                    <p class="text">
                        Como estamos analisando a <strong>Formula 1</strong> e focando em um piloto espec√≠fico, 
                        algumas perguntas guiam nosso estudo:
                    </p>
                    <ol>
                        <li>Quais s√£o as m√©tricas m√©dias do piloto no geral? Elas mudam ao longo dos anos?</li>
                        <li>O desempenho dele evoluiu de forma consistente? E atualmente, continua em crescimento?</li>
                        <li>Com as mudan√ßas de regulamento, houve quedas ou saltos de desempenho?</li>
                        <li>Comparado aos companheiros de equipe, ele se destacou?</li>
                        <li>Houve algum per√≠odo de domin√¢ncia? Essa domin√¢ncia veio mais do carro ou do piloto?</li>
                    </ol>
                    <p class="text">Nosso foco principal √© a quinta pergunta: <strong>o que significa ser dominante?</strong> Para chegar a essa resposta, come√ßaremos explorando as outras quest√µes e, ao final, verificaremos se √© poss√≠vel afirmar ou n√£o essa domin√¢ncia. √â prov√°vel que seja necess√°ria uma an√°lise mais ampla e detalhada, mas por enquanto, sabendo qual √© nosso objetivo, o pr√≥ximo passo √© a <strong>prepara√ß√£o de dados</strong>!</p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )


# ------------------------------
# Prepara√ß√£o de Dados
# ------------------------------
def preparacao_conteudo() -> None:
    """Fun√ß√£o para renderizar o conte√∫do da p√°gina de Tratamento de Dados"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">Prepara√ß√£o de Dados</h2>
                <div class="paragrafo">
                    <p class="text">
                        No mundo real, os dados geralmente s√£o armazenados em bancos de dados normalizados,
                        o que nem sempre √© adequado para an√°lises diretas. 
                        Neste segmento, vamos observar como as tabelas est√£o distribu√≠das, 
                        identificar os indicadores e atributos necess√°rios para a an√°lise
                        e construir novos DataFrames unindo as tabelas de interesse. 
                        Al√©m disso, avaliaremos a possibilidade de criar colunas adicionais
                        que possam auxiliar em an√°lises futuras.
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">Visualizar DataFrames</h3>
                <div class="paragrafo">
                    <p class="text">
                        Como mencionado anteriormente, agora entraremos na parte de visualiza√ß√£o dos DataFrames. 
                        √â importante lembrar que, para analisarmos o desempenho do piloto, 
                        o foco principal s√£o as corridas. 
                        Com isso em mente, vamos explorar os DataFrames a seguir:
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )



    func_get_dataframe = {
        'Piloto': get_info_pilotos,
        'Equipe': get_info_time,
        'Corridas': get_info_corrida,
        'Tempo de Volta': get_lap_time,
        'Status': get_status_race,
        'Classifica√ß√£o dos Pilotos': get_drivers_standing,
        'Temporadas': get_seasons,
        'Pit Stops': get_pit_stops,
        'Resultados das Sprints': get_sprints_results,
        'Classifica√ß√£o das Equipes': get_time_standing,
        'Resultados das Corridas': get_race_results,
        'Circuitos': get_circuits,
        'Qualifica√ß√µes': get_qualifying
    }

    # Selectbox (apenas um por vez)
    df_exibir = st.selectbox(
        "Selecione o DataFrame para visualizar:", 
        list(func_get_dataframe.keys())
    )

    # Condicional para exibir o selecionado
    if df_exibir:  
        st.subheader(f"üìä {df_exibir}")
        df = func_get_dataframe[df_exibir]()  # executa a fun√ß√£o que retorna o dataframe
        st.dataframe(df)

    st.markdown(
        """
            <div class="conteudo">
                <hr>
                <div class="paragrafo">
                    <h3 class="titulo-3">DataFrame para An√°lise</h3>
                    <p class="text">
                        As tabelas <strong>Resultados das Sprints</strong> e 
                        <strong>Resultados das Corridas</strong> apresentam a mesma estrutura de colunas. 
                        Por isso, podemos <strong>concaten√°-las</strong> em um √∫nico DataFrame, 
                        obtendo uma vis√£o consolidada do desempenho dos pilotos e do total de pontos 
                        acumulados ao longo dos anos.
                        Embora as <strong>Sprints</strong> sejam provas mais curtas, 
                        e muitas vezes questionadas pelos pr√≥prios pilotos, 
                        seus pontos tamb√©m s√£o relevantes para a an√°lise e, portanto, ser√£o considerados.
                        Al√©m disso, vamos incluir o <strong>ano</strong> de cada corrida e o 
                        <strong>status final</strong> do piloto, permitindo identificar eventuais DNF 
                        (<i>Did Not Finish</i>) em sua carreira. Isso facilitar√° a filtragem dos per√≠odos 
                        em que Lewis Hamilton esteve ativo na Formula 1.
                        Por fim, construiremos dois DataFrames: 
                        um exclusivo para <strong>Lewis Hamilton</strong> e outro abrangendo 
                        <strong>todos os pilotos</strong>, de modo a possibilitar compara√ß√µes diretas 
                        com o heptacampe√£o.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )

    col1, col2 = st.columns(2)

    DATA_FRAME['df_dados_corridas'] = merge_tabelas()
    DATA_FRAME['df_dados_LH'] = df_especifico()
    

    with col1:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">Todas as Corridas (2007-2024)</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_corridas'])

    with col2:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">Lewis Hamilton Resultados</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_LH'])

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Nestas tabelas est√£o reunidos os dados que servir√£o de base para a an√°lise. 
                        A tabela <strong>Todas as Corridas</strong> consolida informa√ß√µes das tabelas de 
                        <i>Resultados das Sprints</i>, <i>Resultados das Corridas</i>, <i>Corridas</i>, 
                        <i>Status</i>, <i>Equipes</i> e <i>Pilotos</i>. 
                        Al√©m disso, acrescentamos a coluna <i>"ganho_posicao"</i>, que indica 
                        quantas posi√ß√µes o piloto conquistou ao longo da prova em rela√ß√£o ao grid de largada. <br><br>
                        J√° a tabela Lewis Hamilton Resultados mant√©m a mesma estrutura, mas inclui novas colunas: "vitorias", indicando quantas vezes o piloto terminou em primeiro lugar; "podios", registrando as ocasi√µes em que ficou entre os tr√™s primeiros; e "pole_position", que mostra quantas vezes conquistou a primeira posi√ß√£o no grid de largada durante a qualifica√ß√£o. Essa m√©trica √© fundamental 
                        para compreender sua performance ao longo da carreira, j√° que a vit√≥ria 
                        √© um dos principais indicadores de dom√≠nio na Formula 1. <br><br>
                        Com essas informa√ß√µes, o pr√≥ximo passo √© verificar se existem valores nulos, 
                        garantindo que nossa an√°lise seja consistente e confi√°vel.
                    </p>
                </div>
                <hr>
                <h2 class="titulo-2">Tratamento de Dados</h2>
                <div class="paragrafo">
                    <p class="text">
                        No processo de tratamento, √© importante destacar que nem todo valor nulo 
                        representa uma inconsist√™ncia. Em alguns casos, a aus√™ncia de informa√ß√£o 
                        tamb√©m pode trazer insights relevantes. <br><br>
                        Nesta se√ß√£o, vamos verificar a quantidade de valores nulos em cada coluna dos DataFrames.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )

    col3, col4 = st.columns(2)

    with col3:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üîé Valores Nulos por Coluna <br>(Todas as Corridas)</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_corridas'].isnull().sum().reset_index().rename(columns={"index": "Coluna", 0: "Nulos"}))
    
    with col4:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üîé Valores Nulos por Coluna <br> (Lewis Hamilton Resultados)</h3>
            </div>
        """, unsafe_allow_html=True)

        st.dataframe(DATA_FRAME['df_dados_LH'].isnull().sum().reset_index().rename(columns={"index": "Coluna", 0: "Nulos"}))

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        A an√°lise dos valores ausentes revela que as colunas 
                        <i>"ganho_posicao"</i> e <i>"posicao_final"</i> apresentam 
                        exatamente a mesma quantidade de registros nulos. 
                        Isso n√£o √© coincid√™ncia: na Formula 1, quando um piloto 
                        <strong>n√£o conclui a corrida (DNF - Did Not Finish)</strong>, 
                        n√£o h√° como registrar sua posi√ß√£o final ou o ganho de posi√ß√µes. 
                        Assim, a aus√™ncia desses dados reflete a realidade das provas, 
                        e n√£o uma falha no conjunto.
                        <br><br>
                        O mesmo padr√£o ocorre com as colunas 
                        <i>"tempo_volta_ultima"</i> e <i>"ms_volta_ultima"</i>. 
                        Elas ficam em branco justamente quando Hamilton abandona a corrida 
                        ou termina com <strong>+1 volta</strong> em rela√ß√£o ao l√≠der, 
                        situa√ß√£o em que n√£o existe um tempo v√°lido de √∫ltima volta. 
                        J√° os campos <i>"volta_rapida"</i> e <i>"volta_rapida_tempo"</i> 
                        s√≥ aparecem nulos em casos em que o piloto n√£o completou nenhuma volta, 
                        como no GP da Espanha de 2016, quando um acidente com seu companheiro 
                        de equipe, Nico Rosberg, causou seu abandono logo na primeira curva.
                        <br><br>
                        Portanto, os valores nulos est√£o diretamente associados 
                        √†s condi√ß√µes reais das corridas e n√£o comprometem a integridade da base. 
                        Antes de avan√ßar, entretanto, √© essencial verificar a exist√™ncia 
                        de <strong>linhas duplicadas</strong>, evitando que registros 
                        repetidos distor√ßam nossa an√°lise.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )


    # ------ Duplicatas ------
    cols_hashable = [
        col for col in DATA_FRAME['df_dados_corridas'].columns
        if pd.api.types.is_hashable(DATA_FRAME['df_dados_corridas'][col].dropna().iloc[0])
    ]

    duplicatas_corridas = DATA_FRAME['df_dados_corridas'].duplicated(subset=cols_hashable).sum()
    duplicatas_lh = DATA_FRAME['df_dados_LH'].duplicated(subset=cols_hashable).sum()

    col5, col6 = st.columns(2)

    with col5:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üìå Duplicatas <br>(Todas as Corridas)</h3>
            </div>
        """, unsafe_allow_html=True)

        col1, col2, col3 = st.columns([1,2,1]) 
        with col2:
            st.metric("üîÅ Duplicatas", duplicatas_corridas, border=True)

    with col6:
        st.markdown("""
            <div class="conteudo">
                <h3 class="titulo-3" style="text-align: center;">üìå Duplicatas <br>(Lewis Hamilton Resultados)</h3>
            </div>
        """, unsafe_allow_html=True)

        col1, col2, col3 = st.columns([1,2,1])  

        with col2:
            st.metric("üîÅ Duplicatas",duplicatas_lh, border=True)

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        A verifica√ß√£o mostra que n√£o h√° registros duplicados nos DataFrames, 
                        o que refor√ßa a consist√™ncia do tratamento inicial realizado. 
                        Com uma base confi√°vel e livre de ru√≠dos, podemos avan√ßar para a 
                        <strong>classifica√ß√£o das vari√°veis</strong> e a escolha das 
                        visualiza√ß√µes mais adequadas para extrair insights relevantes.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True,
    )


# ------------------------------
# Classifica√ß√£o das Vari√°veis
# ------------------------------
def classificacao_conteudo() -> None:
    """Renderiza a classifica√ß√£o vari√°vel por vari√°vel, com justificativa"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">Classifica√ß√£o das Vari√°veis</h2>
                <div class="paragrafo">
                    <p class="text">
                        Agora vamos classificar <strong>cada vari√°vel do dataset</strong> individualmente.  
                        Para cada coluna, ser√° apresentada sua categoria (qualitativa nominal, ordinal, 
                        quantitativa discreta ou cont√≠nua) acompanhada de uma <strong>justificativa</strong> 
                        explicando o porqu√™ da classifica√ß√£o.  
                        Isso ajuda a entender como elas podem ser usadas em an√°lises e quais 
                        t√©cnicas estat√≠sticas fazem sentido aplicar.
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">üìã Vari√°veis e seus Tipos</h3>
            </div>
        """, unsafe_allow_html=True
    )

    # Lista de vari√°veis com justificativas individuais
    variaveis = [
        # IDs (chaves t√©cnicas, n√£o usadas em an√°lise estat√≠stica direta)
        ("raceId", "ID / C√≥digo", "Identificador √∫nico da corrida. N√£o tem significado num√©rico, apenas relacional."),
        ("driverId", "ID / C√≥digo", "Identificador √∫nico do piloto, usado para integrar informa√ß√µes entre tabelas."),
        ("constructorId", "ID / C√≥digo", "Identificador √∫nico da equipe. Fun√ß√£o de chave estrangeira."),
        ("statusId", "ID / C√≥digo", "Identificador num√©rico do status da corrida. Sem interpreta√ß√£o estat√≠stica."),
        ("circuitId", "ID / C√≥digo", "Identificador √∫nico do circuito, valor t√©cnico para refer√™ncia."),
        ("resultId", "ID / C√≥digo", "Identificador √∫nico do resultado. Usado apenas para indexa√ß√£o."),

        # Vari√°veis Qualitativas Nominais 
        ("code", "Qualitativa Nominal", "C√≥digo de tr√™s letras do piloto (ex: HAM, VER). √â apenas um r√≥tulo."),
        ("nome_completo", "Qualitativa Nominal", "Nome completo do piloto, sem qualquer ordem impl√≠cita."),
        ("nome_equipe", "Qualitativa Nominal", "Nome da equipe (Mercedes, Ferrari). N√£o existe hierarquia."),
        ("name_circuit", "Qualitativa Nominal", "Nome do circuito (ex: Monza, Interlagos). Categoria descritiva."),
        ("status_race", "Qualitativa Nominal", "Situa√ß√£o final (Finished, DNF, Accident). Categorias distintas, sem ordem."),
        ("tipo_corrida", "Qualitativa Nominal", "Tipo da corrida (Sprint ou Principal). Classifica√ß√£o bin√°ria sem hierarquia."),
        ("cores", "Qualitativa Nominal", "Cor associada √† equipe. Apenas descritivo, sem significado num√©rico."),

        # Vari√°veis Quantitativas Discretas 
        ("posicao_grid", "Quantitativa Discreta", "Posi√ß√£o de largada, n√∫mero inteiro. Usado em c√°lculos como ganho de posi√ß√£o."),
        ("posicao_final", "Quantitativa Discreta", "Posi√ß√£o final da corrida. Valores inteiros (1¬∫, 2¬∫, 3¬∫), n√£o admite fra√ß√µes."),
        ("positionOrder", "Quantitativa Discreta", "Ordem oficial registrada pela FIA. Contagem inteira de posi√ß√£o."),
        ("ano", "Quantitativa Discreta", "Ano da corrida. √â uma contagem inteira e n√£o assume valores intermedi√°rios."),
        ("numero_do_piloto", "Quantitativa Discreta", "N√∫mero fixo do carro do piloto. √â inteiro e n√£o fracion√°vel."),
        ("laps", "Quantitativa Discreta", "N√∫mero de voltas completadas. √â uma contagem natural (1, 2, 3...)."),
        ("pontos", "Quantitativa Discreta", "Pontos obtidos segundo regulamento. Valores definidos e inteiros."),
        ("ganho_posicao", "Quantitativa Discreta", "Diferen√ßa entre posi√ß√µes de largada e chegada. Valor inteiro (positivo ou negativo)."),
        ("vitorias", "Quantitativa Discreta", "Um booleano em 0/1 representa se Hamilton venceu (1) ou n√£o (0) uma corrida. √â considerado quantitativa discreta por assumir apenas dois valores inteiros poss√≠veis e permitir c√°lculos estat√≠sticos."),
        ("podios", "Quantitativa Discreta", "Um booleano em 0/1 representa se Hamilton ficou no p√≥dio (1) ou n√£o (0) em uma corrida. √â considerado quantitativa discreta por assumir apenas dois valores inteiros poss√≠veis e permitir c√°lculos estat√≠sticos."),
        ("pole_position", "Quantitativa Discreta", "Um booleano em 0/1 representa se Hamilton pegou a primeira posi√ß√£o do grid d largada (1) ou n√£o (0) em uma corrida. √â considerado quantitativa discreta por assumir apenas dois valores inteiros poss√≠veis e permitir c√°lculos estat√≠sticos."),
        ("rodada", "Quantitativa Discreta", "Contagem dos GP's de um ano. √â uma vari√°vel de contagem inteira"),

        # Vari√°veis Quantitativas Cont√≠nuas 
        ("tempo_volta", "Quantitativa Cont√≠nua", "Tempo de volta medido em escala cont√≠nua. Entre dois tempos sempre existe outro."),
        ("ms_volta", "Quantitativa Cont√≠nua", "Tempo de volta registrado em milissegundos. Representa medida cont√≠nua."),
        ("volta_rapida_tempo", "Quantitativa Cont√≠nua", "Tempo da volta mais r√°pida, grandeza cont√≠nua com precis√£o infinita."),
        ("data_corrida", "Quantitativa Cont√≠nua", "A data da corrida pode ser representada numericamente (como dias ou segundos em rela√ß√£o a uma origem no tempo). Dessa forma, assume valores em uma escala cont√≠nua e permite compara√ß√µes e c√°lculos de intervalos entre corridas.")

    ]


    # Criar dataframe com justificativas
    df_variaveis = pd.DataFrame(variaveis, columns=["Vari√°vel", "Tipo", "Justificativa"])

    st.dataframe(df_variaveis, use_container_width=True)

    st.markdown(
        """
            <div class="conteudo">
                <hr>
                <div class="paragrafo">
                    <p class="text">
                        Ap√≥s a classifica√ß√£o detalhada das vari√°veis, temos uma vis√£o clara de seus 
                        pap√©is dentro do conjunto de dados. Essa organiza√ß√£o √© essencial para orientar 
                        a escolha das t√©cnicas estat√≠sticas e das visualiza√ß√µes mais adequadas. 
                        Com essa base s√≥lida, podemos avan√ßar com maior seguran√ßa para a etapa de 
                        <strong>an√°lise explorat√≥ria</strong>, extraindo padr√µes, rela√ß√µes e insights 
                        relevantes sobre o desempenho dos pilotos e equipes na Formula 1.
                    </p>
                </div>
            </div>
        """, unsafe_allow_html=True
    )


# ------------------------------
# An√°lise dos Dados
# ------------------------------
def analise_conteudo() -> None:
    """Fun√ß√£o para renderizar a an√°lise explorat√≥ria"""
    st.markdown(
        """
            <div class="conteudo">
                <h2 class="titulo-2">An√°lise dos Dados</h2>
                <div class="paragrafo">
                    <p class="text">
                        Com intuito de analisar a carreira de Lewis Hamilton na Formula 1, o primeiro passo ser√° observar sua consist√™ncia ao longo das temporadas, avaliando medidas como m√©dias, medianas e desvios-padr√£o de seus resultados, al√©m de m√©tricas gerais como vit√≥rias, p√≥dios, poles e pontos. Em seguida, a an√°lise ser√° segmentada entre os anos de McLaren e de Mercedes, permitindo comparar a distribui√ß√£o de seus desempenhos em cada equipe e identificar diferen√ßas estat√≠sticas relevantes. Tamb√©m ser√° investigado o impacto das mudan√ßas de regulamento, utilizando intervalos de confian√ßa e an√°lise de dispers√£o para compreender como essas transi√ß√µes afetaram seu rendimento. Por fim, Hamilton ser√° comparado aos seus companheiros de equipe, especialmente na Mercedes, aplicando testes de hip√≥tese para verificar se, em m√©dia, seus resultados foram significativamente superiores aos dos colegas de time.
                    </p>
                </div>
                <hr>
                <h3 class="titulo-3">Panorama Geral da Carreira</h2>
                <div class="paragrafo">
                    <p class="text">
                        O primeiro passo para a an√°lise √© observar o panorama geral da carreira de Lewis Hamilton. Para isso, √© importante levantar informa√ß√µes b√°sicas que ajudam a dimensionar sua trajet√≥ria, como o n√∫mero total de vit√≥rias conquistadas, a quantidade de p√≥dios alcan√ßados, quantas vezes ele largou na pole position e, por fim, o total de campeonatos mundiais que o piloto acumula ao longo da sua trajet√≥ria na Formula 1.
                    </p>
                </div>
            </div>
        """, unsafe_allow_html=True
    )

    df_piloto = DATA_FRAME['df_dados_LH']

    # Layout com duas colunas principais
    imagemCol, metricasCol = st.columns([0.4, 0.6], vertical_alignment="center")

    with imagemCol:
        st.image(os.path.abspath('assets/img/hamilton.png'), use_container_width=True)

    with metricasCol:

        resumo_ano = df_piloto.groupby("ano").agg(
            vitorias=("vitorias", "sum"),
            poles=("pole_position", "sum"),
            podios=("podios", "sum"),
        ).reset_index().sort_values("ano")

        total_temporadas = resumo_ano["ano"].nunique()
        total_vitorias = int(resumo_ano["vitorias"].sum())
        total_poles = int(resumo_ano["poles"].sum())
        total_podios = int(resumo_ano["podios"].sum())
        total_titulos = 7
        total_corridas_terminadas = DATA_FRAME['df_dados_LH'][DATA_FRAME['df_dados_LH']["posicao_final"].notnull()].shape[0]

        # Organizar m√©tricas em 2 linhas de 2 colunas
        col1, col2 = st.columns(2)
        with col1:
            st.metric("üèÅ Temporadas", total_temporadas, border=True)
        with col2:
            st.metric("ü•á Vit√≥rias", total_vitorias, border=True)

        col3, col4 = st.columns(2)
        with col3:
            st.metric("üéØ Poles", total_poles, border=True)
        with col4:
            st.metric("üèÜ P√≥dios", total_podios, border=True)

        col5, col6 = st.columns(2)
        with col5:
            st.metric("üëë T√≠tulos do Campeonato", total_titulos, border=True)
        with col6:
            st.metric("üö¶ Corridas Terminadas", total_corridas_terminadas, border=True)


    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Ao analisarmos os n√∫meros de Lewis Hamilton, rapidamente fica claro o tamanho do impacto que ele exerce dentro da Formula 1. Poucos pilotos na hist√≥ria conseguiram alcan√ßar um patamar t√£o elevado e consistente. Para termos uma no√ß√£o mais concreta dessa dimens√£o, basta lembrar que Ayrton Senna , considerado por muitos o maior nome da categoria , conquistou 41 vit√≥rias ao longo de sua carreira. √â verdade que, na √©poca, havia um n√∫mero menor de corridas por temporada, o que ajuda a explicar parcialmente essa diferen√ßa. No entanto, mesmo em um comparativo mais recente e equilibrado, Michael Schumacher, que divide com Hamilton o topo da lista de t√≠tulos mundiais, acumulou 95 vit√≥rias ao longo de sua trajet√≥ria. Ainda assim, Hamilton conseguiu superar essa marca, deixando em evid√™ncia a grandiosidade de seu desempenho e refor√ßando sua posi√ß√£o como um dos maiores, sen√£o o maior, da hist√≥ria da Formula 1.
                    </p>
                    <p class="text">
                        Outro ponto impressionante s√£o os <b>206 p√≥dios</b> conquistados, lembrando que esse n√∫mero inclui tamb√©m suas vit√≥rias.
                        Se retirarmos os 105 triunfos do total, obtemos a propor√ß√£o de aproximadamente <b>49% de vit√≥rias</b> sobre os p√≥dios. Ou seja, praticamente metade das vezes em que subiu ao p√≥dio, foi no lugar mais alto. 
                        Em compara√ß√£o, Schumacher apresenta cerca de <b>41%</b>, um n√∫mero alt√≠ssimo, mas ainda abaixo do brit√¢nico.
                    </p>
                    <p class="text">
                        Nas poles, Hamilton tamb√©m impressiona. Curiosamente, o n√∫mero de poles coincide com o total de vit√≥rias.
                        Claro, isso n√£o significa que todas as poles viraram vit√≥rias. 
                        Um exemplo claro foi em 2016, quando mesmo largando na frente, acabou colidindo com seu companheiro de equipe j√° na primeira curva.
                    </p>
                    <p class="text">
                        No total, Hamilton <b>terminou 344 corridas</b>. Dessas, em <b>206</b> ele esteve no p√≥dio, o que representa cerca de <b>40%</b>.
                        Em outras palavras: a cada 10 corridas que completou, em 4 ele aparecia entre os tr√™s primeiros, uma consist√™ncia inacredit√°vel.
                    </p>
                    <p class="text">
                        √â importante destacar que esses n√∫meros s√£o acumulados da carreira inteira.
                        Para entender melhor como Hamilton construiu essa trajet√≥ria, precisamos olhar sua evolu√ß√£o ao longo das temporadas:
                        ser√° que ele sempre foi consistente desde o in√≠cio, demonstrando talento natural,
                        ou essa performance foi resultado de um processo de amadurecimento aliado ao carro e √† equipe?
                        Com isso em mente, faremos um gr√°fico m√©dio da posi√ß√£o que ele ficou ao longo da temporada e comparar com a m√©dia de outros pilotos que correram na mesma √©poca 
                    </p>
                    <p class="text">
                        Com isso em mente, o pr√≥ximo passo da an√°lise ser√° observar algumas medidas estat√≠sticas que ajudam a traduzir numericamente o desempenho de Hamilton ao longo de sua carreira. Para cada temporada, iremos calcular m√©tricas como a m√©dia, que mostra um panorama geral de seus resultados; a mediana e a moda, que ajudam a identificar padr√µes de consist√™ncia; al√©m do desvio padr√£o e da vari√¢ncia, que indicam o quanto suas performances variaram ao longo do tempo. Dessa forma, ser√° poss√≠vel entender n√£o apenas os n√∫meros absolutos, mas tamb√©m como eles se distribuem, revelando a evolu√ß√£o e a regularidade do piloto temporada ap√≥s temporada.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True
    )


    resumo_hamilton = DATA_FRAME['df_dados_LH'].groupby(["ano", "nome_equipe"]).agg(
        mean=("posicao_final", "mean"),
        median=("posicao_final", "median"),
        std=("posicao_final", "std"),
        var=("posicao_final", "var"),
        moda=("posicao_final", lambda x: x.mode().iloc[0] if not x.mode().empty else None),
    ).reset_index()

    col1, col2 = st.columns([0.4,0.6], vertical_alignment='center')

    with col1:
        st.markdown(
            """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Como podemos observar no gr√°fico ao lado, logo em seu ano de estreia, 
                        <strong>Lewis Hamilton</strong> se destacou com <strong>m√©dias</strong> e 
                        <strong>medianas</strong> muito baixas para um novato na <i>Formula 1</i>. 
                        Vale ressaltar que, naquele ano, ele quebrou o <strong>recorde de pontos de um estreante</strong>, 
                        um feito que j√° evidenciava seu talento.
                    </p>
                    <p class="text">
                        Entretanto, com a entrada de um <strong>novo regulamento</strong>, percebe-se uma 
                        piora no desempenho, tanto na <strong>m√©dia</strong> quanto na <strong>mediana</strong>. 
                        Isso se deve principalmente ao <i>carro</i>: a <strong>McLaren</strong> focou tanto na disputa de 2008 
                        (quando Hamilton foi <strong>campe√£o mundial</strong>) que acabou negligenciando o desenvolvimento para a temporada seguinte. 
                        Essa queda trouxe aprendizados e o carro evoluiu ao longo das corridas. 
                        Ainda assim, insatisfeito com a estagna√ß√£o, Hamilton migrou para a <strong>Mercedes</strong>.
                    </p>
                </div>
            </div>
            """,
            unsafe_allow_html=True
        )


    with col2:
        medidas_centrais_grafico(resumo_hamilton)

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                        Na nova escuderia, o cen√°rio mudou. Com o in√≠cio da <strong>era h√≠brida</strong>, seu talento ficou ainda mais evidente: 
                        as <strong>m√©dias</strong> e <strong>medianas</strong> se mantiveram constantemente <strong>abaixo do 3¬∫ lugar</strong>, 
                        marcando um per√≠odo de <strong>dom√≠nio</strong> de Hamilton e da <strong>Mercedes</strong>.
                    </p>
                    <p class="text">
                        O ponto de virada veio em <strong>2021</strong>, na hist√≥rica batalha contra <strong>Max Verstappen</strong>. 
                        A <strong>Red Bull</strong> alcan√ßou a Mercedes em desenvolvimento e a disputa foi acirrada at√© a √∫ltima corrida, 
                        quando Hamilton acabou derrotado.
                    </p>
                    <p class="text">
                        J√° a partir de <strong>2022</strong>, com o regulamento do <strong>efeito solo</strong>, a Mercedes enfrentou 
                        s√©rios problemas de projeto. Hamilton tamb√©m parecia n√£o se adaptar bem ao novo conceito, refletindo em maior 
                        <strong>instabilidade</strong> e em um <strong>desvio padr√£o</strong> mais evidente nas posi√ß√µes. 
                        Apesar de alguma melhora em <strong>2023</strong>, as <strong>medianas</strong> e as <strong>m√©dias</strong> passaram a seguir 
                        uma tend√™ncia de <strong>crescimento</strong>, indicando resultados menos consistentes em rela√ß√£o ao auge da carreira.
                    </p>
                    <p class="text">
                        Ap√≥s entendermos a evolu√ß√£o de <strong>Hamilton</strong> ao longo dos anos e os impactos 
                        dos diferentes <strong>regulamentos</strong> em seu desempenho, √© importante observar tamb√©m 
                        a <strong>diferen√ßa entre suas passagens na McLaren e na Mercedes</strong>. 
                        Para isso, elaboramos uma <i>distribui√ß√£o das posi√ß√µes finais</i> separada por equipe, 
                        o que permite visualizar de forma clara tanto seu desenvolvimento quanto a confirma√ß√£o 
                        dos pontos discutidos anteriormente.
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True
    )


    grafico_densidade_interativo(DATA_FRAME['df_dados_LH'])

    st.markdown(
        """
            <div class="conteudo">
                <div class="paragrafo">
                    <p class="text">
                    Como podemos observar acima, gr√°fico de <strong>distribui√ß√£o de posi√ß√µes</strong> evidencia de forma clara a diferen√ßa entre as fases de Hamilton na 
                    <strong>McLaren</strong> e na <strong>Mercedes</strong>. Enquanto na <strong>Mercedes</strong> sua curva √© mais concentrada 
                    nos primeiros lugares, com <i>pico</i> pr√≥ximo da <strong>1¬™ posi√ß√£o</strong> e <i>m√©dia</i> de <strong>3.5</strong>, 
                    j√° na <strong>McLaren</strong> a distribui√ß√£o aparece mais espalhada, com <i>pico</i> em torno da <strong>2¬™ posi√ß√£o</strong> 
                    e <i>m√©dia</i> de <strong>4.6</strong>. Isso mostra que, nos anos de <strong>Mercedes</strong>, Hamilton teve uma consist√™ncia 
                    muito maior em lutar por <strong>vit√≥rias</strong> e <strong>p√≥dios</strong>, enquanto na <strong>McLaren</strong>, apesar de 
                    competitivo, os resultados foram mais vari√°veis. 
                    </p>
                    <p class="text">
                    Ainda assim, √© importante destacar que, mesmo sem um <i>carro dominante</i>, Hamilton j√° apresentava desempenhos de alto n√≠vel. 
                    Seu <strong>t√≠tulo de 2008</strong> √© um exemplo disso: conquistado principalmente pelo talento e esfor√ßo, em uma temporada 
                    marcada pela pol√™mica do <i>‚ÄúCingapuragate‚Äù</i>, que poderia ter mudado o rumo do campeonato em favor de <strong>Felipe Massa</strong>. 
                    Na √∫ltima corrida, por√©m, Hamilton garantiu o t√≠tulo com uma <strong>ultrapassagem decisiva</strong> na volta final, mesmo com Massa 
                    vencendo a prova. 
                    </p>
                    <p class="text">
                    Retomando o ponto central, vemos que a <i>era de domin√¢ncia</i> da <strong>Mercedes</strong> foi determinante para que Hamilton 
                    conquistasse <strong>6 de seus 7 t√≠tulos mundiais</strong>. No entanto, isso levanta uma quest√£o importante: se a equipe era t√£o 
                    dominante, por que apenas <strong>Hamilton</strong> conseguiu transformar essa superioridade em <strong>t√≠tulos</strong>, enquanto 
                    seus <i>companheiros de equipe</i> n√£o tiveram o mesmo sucesso? Para responder a isso, precisamos analisar tamb√©m o desempenho 
                    dos <strong>companheiros de equipe</strong> de Hamilton, o que ser√° o pr√≥ximo passo da nossa an√°lise. 
                    </p>
                </div>
            </div>
        """,
        unsafe_allow_html=True
    )





# ------------------------------
# Renderizando tudo
# ------------------------------
def conteudo() -> None:
    """Fun√ß√£o para renderizar o conte√∫do da p√°gina de An√°lise de Dados"""
    st.markdown(
        """
        <div class="conteudo">
            <h1>An√°lise de Dados</h1>
        </div>
        """,
        unsafe_allow_html=True,
    )
    
    contextTab, dadosTab, prepTab, classificacaoTab, analiseTab, conclusaoTab = st.tabs(
        [
            ":material/contextual_token: Contexto",
            ":material/table: Dados Dispon√≠veis",
            ":material/healing: Prepara√ß√£o",
            ":material/search_insights: Classifica√ß√£o de Vari√°veis",
            ":material/analytics: An√°lise",
            ":material/pin_end: Conclus√£o"
        ]
    )
    
    with contextTab:
        contexto_conteudo()
    with dadosTab:
        dados_conteudo()
    with prepTab:
        preparacao_conteudo()
    with classificacaoTab:
        classificacao_conteudo()
    with analiseTab:
        analise_conteudo()


conteudo()
